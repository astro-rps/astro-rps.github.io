{"kind":"Notebook","sha256":"2ee07f126514b5139a8c9b2411d5c88c08465c62a856c096f1b130aacfe31e8c","slug":"first-python-codes","location":"/01_Lectures/Week 0/1-4_First_Python_Codes.ipynb","dependencies":[],"frontmatter":{"title":"First Python Codes","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"github":"https://astro-rps.github.io/","keywords":[],"numbering":{"title":{"offset":2}},"edit_url":"https://astro-rps.github.io//blob/main/01_Lectures/Week 0/1-4_First_Python_Codes.ipynb","exports":[{"format":"ipynb","filename":"1-4_First_Python_Codes.ipynb","url":"/build/1-4_First_Python_Cod-21e2a77d4e184c26376f0d401b1cd7d9.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Last week, we focused on how to navigate the Terminal, and set up our environments from which we can run Python. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yyAnRg07RV"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This week, we’re going to actually ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UnzSKGISgT"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"run","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"No5iWeED5j"}],"key":"hUjfiKgUFd"},{"type":"text","value":" Python.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OWQnIVhmO2"}],"key":"sZ2usjMoGv"},{"type":"text","value":" By the end of this part of today’s lesson, you will be able to...","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YRw7V7SPA3"}],"key":"CYOHcRnZWz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Run Python interactively through the Terminal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NZ32bA5Ui6"}],"key":"pXKkFNHrwN"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Create, edit, and run .py “scripts”: saveable, reproducible Python codes","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lphGVIPbWx"}],"key":"pyoUM5aqky"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Understand and demonstrate the basic use of the print() function","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BVdW4mWhf9"}],"key":"nY1xcSxqF7"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Write and run your own classic “Hello World!” Python script","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jnF0mnbh2A"}],"key":"mSjfY4yUW5"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Write a multi-line Python script and understand basic program layout","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qjUBmGrnUL"}],"key":"ZmXH6f6gXa"}],"key":"eAULdy58gQ"}],"visibility":"show","key":"oOM0ALSRqN"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A Quick Reminder","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MWu2c08mFm"}],"identifier":"a-quick-reminder","label":"A Quick Reminder","html_id":"a-quick-reminder","implicit":true,"key":"ZfVNwe7rtu"}],"visibility":"show","key":"KsgTwRgkdR"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Last week, we set up conda environments that we’ll be using for the whole Astro-RPS series. Before we move forward, you’ll want to move into your “working directory” where you’ve been working on everything up till now (reminder: you can use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qUmv9y1zQ7"},{"type":"inlineCode","value":"cd [dirname]","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHzkzmf7he"},{"type":"text","value":" to navigate to your working directory from within the terminal). Once you’ve done that, activate the astro-rps environment:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P07KO2MUoZ"}],"key":"LlpaWJefr0"},{"type":"code","lang":"bash","value":"conda activate astro-rps","key":"sCJXOmFgx4"}],"visibility":"show","key":"UzxoL4YLoV"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, you can activate Python in the same terminal by simply typing:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iad8GfRGeM"}],"key":"HHD0oJbzFV"}],"visibility":"show","key":"v2Il0dH4QJ"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"bash","value":"python","key":"ebxXo8TiAY"}],"visibility":"show","key":"a1GxtchSnb"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"or equivalently,","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mYNlgpICLn"}],"key":"HLCDkb7YwP"}],"visibility":"show","key":"g7hRZVwlaE"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"bash","value":"python3.8","key":"flcguH1aCn"}],"visibility":"show","key":"pjt1b4daXp"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If things work properly, you should see a message that includes a few details about the Python version you are running, your operating system, etc. If you do, you should see a blinking cursor ready for you to type code in, often preceded by a >>>. From here, we should already be able to do some basic calculations.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PpYd25InZW"}],"key":"rtj1PDDPls"}],"visibility":"show","key":"OcVT7I2mrU"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise One: Basic Mathematical Operations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fcmn9H1x5s"}],"key":"JjUzmeEBEG"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In your shell/terminal where you have started up Python, try adding two numbers as below:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"J2kvNp1J8T"}],"key":"FTsU13i6dR"},{"type":"code","lang":"python","value":"10 + 2","key":"UCC7XNs5xh"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"(hit enter when you’re done typing). This should return a single number. Then, try","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CcjoIS7fC8"}],"key":"xCTksH0KPz"},{"type":"code","lang":"python","value":"print(10+2)","key":"BjLLfEWlp4"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"again, hit enter. Is the output the same, or different? What happens when you swap out the + with “-”, then “/”, then “*”. What do each of these return?","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"mA9slLyuCm"}],"key":"n3UG7lJYBf"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Lastly, try:","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"B9tmd1V0Ys"}],"key":"i0r0MVZocN"},{"type":"code","lang":"python","value":"print(10 / 0)","key":"Q9SzJLhqAY"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"What happens?","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"KWksWvW8Px"}],"key":"sDUTu4sdOE"}],"class":"tip","key":"glDURU5st3"}],"visibility":"show","key":"gIlfqnzUFo"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, in the same terminal, type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jW4EPysNwl"}],"key":"PxQK5Fz3IA"},{"type":"code","lang":"bash","value":"exit()","key":"z6dyJPlYYS"}],"key":"AEb3fgTMCH"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"and hit enter. Once you’ve done so, congrats! You’ve started, written, completed, and quit your first Python session.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"twqiCLqiTn"}],"key":"QklXrZRptW"}],"visibility":"show","key":"HLc5fwjzfu"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"From here on, we actually will not recommend you use just “python” and instead recommend:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q2j2N8HvV3"}],"key":"RohZ8wMF17"},{"type":"code","lang":"python","value":"   ipython","key":"mYuhxLIKlj"}],"visibility":"show","key":"SLtxwk6tC9"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The differences are mostly unimportant, but it has some conveniences (like colored text for different keywords) that make it nicer to use.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v9UOIYGi5a"}],"key":"eDIUFIIziK"}],"key":"K0gXmDN8u6"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Running Python Interactively in the Terminal vs. “Scripting”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kP9pCRPwXU"}],"key":"NhSRvxLEtf"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When we run Python interactively like we did above, then quit, ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p802fHlNMP"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"none of the operations and outputs are saved","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"R81aw4nhfv"}],"key":"jiYTdTnj75"},{"type":"text","value":". While you can sometimes use the up arrowkey to see recent commands and perhaps re-run them that way manually, this this obviously isn’t the way most codes are written: we normally care a lot about saving our work so that we can expand upon it later and re-run. So, in short, don’t do work in interactive Python sessions that you want to preserve later.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dpHDR9OsOv"}],"key":"pc72BPSky3"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"What do we instead? We create ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LyeqtTY3Nt"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"scripts","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tCqExmqWTl"}],"key":"gtRmdn8h8S"},{"type":"text","value":". This is just a fancy way of saying “codes that we save in files”. In Python, these have the file extension .py, i.e., you might call your script “code.py” (or hopefully something more descriptive).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YaDjWxS2Zm"}],"key":"eCFUzHVJdJ"}],"class":"important","key":"tO6hOMq9uX"}],"visibility":"show","key":"UrJtcoHeRE"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To create a script, first exit Python. This should you leave in a normal bash shell, from which you can type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gCc3rP9NdF"}],"key":"NPTbtaGFmc"}],"visibility":"show","key":"qfzkJrDfiB"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"bash","value":"touch first_script.py","key":"QGiIc2hghB"}],"visibility":"show","key":"yRylam4fFJ"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The command “touch” simply creates a basic text file with the name provided afterwards (here, first_script.py). We are now free to edit this file through whatever means we want: for now, open it up in whatever text editor you prefer (e.g., TextEdit, Notepad, Text Editor for Mac, Windows, and Linux respectively).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DnkkQxORDb"}],"key":"maagPHfPHa"}],"visibility":"show","key":"lwO7QK4QeH"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, try adding","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"B0XqiJu2jt"}],"key":"pdtSRIbV5A"},{"type":"code","lang":"python","value":" print(\"Hello World!\")","key":"MSm08VEwcN"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"into that file and save it. Then, open up a bash terminal (","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"psvq9lybqD"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"don’t type python","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ZBfaYfDYhN"}],"key":"t53aII1c9t"},{"type":"text","value":") and type","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"DBL961sRpm"}],"key":"NLJq8Tec6W"},{"type":"code","lang":"bash","value":"python first_script.py","key":"epNuP7a9AP"}],"visibility":"show","key":"hXfh8qfMkb"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"from within the same directory where you saved the file. If you’re in the right place, your bash shell should print out the words Hello World. If you run into an error, check first that you’re in the right directory (and if not, use cd to get there).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q1WIeMMP1C"}],"key":"BE2nQoSj7O"}],"visibility":"show","key":"eikdYNiwYZ"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Comments","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NfPjs1acCF"}],"identifier":"comments","label":"Comments","html_id":"comments","implicit":true,"key":"mS0s6TAMgg"}],"visibility":"show","key":"duGZUhVUIq"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What if we want to put something into the code that we don’t want to run? In that case, we can ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ijQLemfX4q"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"comment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oi957J5L0v"}],"key":"bm1Ysvr3oD"},{"type":"text","value":" lines using the #. For our script above, we could add a description of what the code is doing as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHVoWcglwR"}],"key":"HGay78UHJR"}],"visibility":"show","key":"JNaHYi94T1"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"python","value":" # This is a program to print the words Hello World.\n print(\"Hello World!\") # this is the line that does the printing.","key":"IF11FJIsUJ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"As can be seen, anything after the hashtag is completely ignored by Python.  This is true whether you’ve put the commented phrase on its own line or at the end of another line.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QCGhMHxZzs"}],"key":"oOopFZhrc4"}],"visibility":"show","key":"HT6f1lCd7f"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"There’s not much more to comments than this! Broadly speaking, commenting is vital piece of making sure codes are understandable. We encourage you to include comments throughout your codes that indicate what important lines are doing. This will help avoid the situation where you log on a week later and totally lose the train of thought that you had the previous week (speaking from experience, we promise this really will happen).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jOybJwyYrh"}],"key":"rSGgTD0zxI"}],"visibility":"show","key":"rd3S1hLWAm"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Writing Multi-line Programs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V78uicscxp"}],"identifier":"writing-multi-line-programs","label":"Writing Multi-line Programs","html_id":"writing-multi-line-programs","implicit":true,"key":"edoMPMCzmE"}],"visibility":"show","key":"dBixogz2EW"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With the basics down, we can start to complexify. In Python, distinct commands are separated onto different lines. In most situations, Python is linear: lines are executed from the top to the bottom. To see this for a case when you want to print two different things, you can write the code:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yCF57IZP88"}],"key":"L0m3svBnWu"},{"type":"code","lang":"python","value":"# This code prints a phrase and a number.\nprint(\"Hello World!\")\nprint(5+5)","key":"Fu3A4lrX1b"}],"visibility":"show","key":"Vr4eKg8K2E"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Each print statement has an implicit (but hidden) command at the end that tells it to move to the next line after printing, so you should find that this prints out each result on its own line. If you don’t want that, one choice of syntax to avoid that is:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kUbTYjA7YE"}],"key":"d8mzarT0iW"}],"visibility":"show","key":"cA8F0lqG5n"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"python","value":"print(\"Hello World!\", 5+5)","key":"Gku1HUywXq"}],"visibility":"show","key":"XVQQZOnKKX"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"where all we’ve done is separate the things we want by commas. As we’ll later discuss, print() is what we call a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YL6sAi0ALT"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h9ZHyOGnvp"}],"key":"lfOYEPW8RF"},{"type":"text","value":" that can take any number of arguments (things inside the parantheses).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qdKROcsMLx"}],"key":"G0ykOoOKjF"}],"visibility":"show","key":"L0MTLO77QX"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Does the spacing and layout of the script file matter?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tAuVfZTuXV"}],"key":"O6zVvrmLxT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Yes and no","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fFXzgRgb7T"}],"key":"w5mdVurmhN"},{"type":"text","value":". In general, “vertical” spacing in Python does not matter - you can feel free to hit enter as many times between the lines in your .py file. The number of spaces within the middle of a line also doesn’t matter, so print(5 + 5) yields the same result as print(5        +      5). However, ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z3JV3odNRr"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"horizontal ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oYgwsfJJgB"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"aligment","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vsDPpl6kKr"}],"key":"nJ9ms5XEgc"},{"type":"text","value":" does matter","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"akGqHFPbU5"}],"key":"p4t31EZyDc"},{"type":"text","value":". Lines should generally all start at the same left-justification, unless you are working with if statements, loops, or creating your own functions (more on each of those later). Let’s try to write a very simple code to demonstrate this.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qKojB9fy5H"}],"key":"rqMxNTtMIc"}],"class":"important","key":"tmZsERPl88"}],"visibility":"show","key":"tSng4Iwb3r"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise Two: Testing Python Spacing Rules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xer8eHOEs9"}],"key":"f4TSvQDonp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In your first_codes.py file, add a tab or some spaces before the start of the second line:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qt98ddnpda"}],"key":"zXmca1cjNW"},{"type":"code","lang":"python","value":"print(\"Hello World!\")\n    print(5+5)","key":"EGsWDGyRQl"}],"class":"tip","key":"LzlQevRGkZ"}],"visibility":"show","key":"hWIM9utn5Q"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"When you try to run this script, you should find that “Hello World” does ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FteHBU5zcT"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CiW7D1PyYY"}],"key":"YyxUOItHcO"},{"type":"text","value":" print. Instead, you will get an IndentationError - telling you that Python expected the second line to be left-aligned with the first line. You might wonder: why does the first line not work, even if the error is on the second line?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cCgih1hgUV"}],"key":"xGlAqn4Mtz"}],"visibility":"show","key":"qVs1aHJAqr"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The short answer is that Python does a quick check before running your code to see if there any obvious bugs. This procedure is not quite as robust as in some other programming languages, and it won’t catch things like DivideByZero errors, infinite loops, etc. However, it will raise an immediate error if it seems things like unusual spacing or undefined variables (more on the latter in the next notebook).  Thus, for the example above, the error is raised ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ptU0TSjEej"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"before","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YX2arXEAiJ"}],"key":"IsgrncfAVT"},{"type":"text","value":" the first line of code is actually run, breaking the program flow.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ChwIPTqiIz"}],"key":"GXWafwJlci"}],"visibility":"show","key":"d4EyJqniE2"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What if we want to store information between lines?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P99unVnjiM"}],"identifier":"what-if-we-want-to-store-information-between-lines","label":"What if we want to store information between lines?","html_id":"what-if-we-want-to-store-information-between-lines","implicit":true,"key":"szRjBHxnSH"}],"visibility":"show","key":"STdAMNs2Cr"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Thus far, we’ve only done a very simple set of computations and immediately printed the result. What if we instead wanted to store the result of that calculation for later? In that case, we will want to define a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"abffzkxAkb"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"variable","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rJDvNKVWz3"}],"key":"gZJum5FNG3"},{"type":"text","value":". It’s best to see this by example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rl0tNCuzV0"}],"key":"Ow0MraHJXW"}],"visibility":"show","key":"OsY19O89wP"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"code","lang":"python","value":"result = 5 + 5 \nprint(result)","key":"cZoizKbxZd"}],"visibility":"show","key":"kN6SE9TgwW"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here, we have stored the result of the 5+5 . We could have named “result” anything we wanted - you’re free to choose the name (within certain rules - e.g., t can’t start with a number). In this context, the = sign acts as a so-called “assignment operator”: it takes whatever is on the righthand side and stores it in whatever we have called the variable on the lefthand side. It has nothing to do with equalities or truth/falsity.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sNKmcR09mz"}],"key":"rYatA1kbIx"}],"visibility":"show","key":"FjyA0jEix4"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We now have everything we need to write our first ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QBpqvz806C"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"useful","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uJ6ME8aoHa"}],"key":"Y4cXg8FWlv"},{"type":"text","value":" Python program. Let’s use an example from astrophysics:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OBex92CQvP"}],"key":"wQMM0cKcuR"}],"visibility":"show","key":"rI0meQlBXn"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise Three: The Stefan-Boltzmann Law","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zShlpM02dR"}],"key":"oKv08sscvd"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Create a new code file called “SB.py”. Within SB.py, write the necessary code to calculate the Luminosity (L) of a star according to the Stefan-Boltzmann law,","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hwKavMJ08k"}],"key":"FApEkCobjw"},{"type":"math","value":"L = 4\\pi R^2 \\sigma T^4","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"tight":"before","html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mn>4</mn><mi>π</mi><msup><mi>R</mi><mn>2</mn></msup><mi>σ</mi><msup><mi>T</mi><mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">L = 4\\pi R^2 \\sigma T^4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"ot2Lec8AfE"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"In doing so, define a unique variable for each of L, pi, sigma, R, and T (where the latter are radius and temperature); don’t just put the computation in a print statement. Using pi = ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OKsTXh0id2"},{"type":"text","value":"3.14","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wLcIVFatBU"},{"type":"text","value":" and sigma = ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uyonVYQ9k5"},{"type":"inlineMath","value":"5.67 * 10^{-8} \\rm \\ W/m^{2}/K^{4}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5.67</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>8</mn></mrow></msup><mrow><mtext> </mtext><mi mathvariant=\"normal\">W</mi><mi mathvariant=\"normal\">/</mi><msup><mi mathvariant=\"normal\">m</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><msup><mi mathvariant=\"normal\">K</mi><mn>4</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">5.67 * 10^{-8} \\rm \\ W/m^{2}/K^{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5.67</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mspace\"> </span><span class=\"mord mathrm\">W/</span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">/</span><span class=\"mord\"><span class=\"mord mathrm\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span>","key":"THE6JHjTNT"},{"type":"text","value":",\nwhat is the luminosity of a star with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"p74gzMeqke"},{"type":"inlineMath","value":"R = 7 * 10^8","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>=</mo><mn>7</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">R = 7 * 10^8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span>","key":"ynAeS51xOW"},{"type":"text","value":" meters and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"geLTDDXGHt"},{"type":"inlineMath","value":"T = 5776","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>=</mo><mn>5776</mn></mrow><annotation encoding=\"application/x-tex\">T = 5776</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5776</span></span></span></span>","key":"JRYBjk4APc"},{"type":"text","value":" K? You can assume the units work out (and therefore you can ignore them in Python). ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GtfJDobmAW"},{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Hint","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jwhXs87SvO"}],"key":"h4PnIVVWcr"},{"type":"text","value":": use the ** to use powers in Python, e.g., 2 ** 3 will give you 8.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"q7ikCjNiCY"}],"key":"uMx7dOiO9d"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Print ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ZnhQGtcjRe"},{"type":"inlineMath","value":"L","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>","key":"zEJ44aXGsx"},{"type":"text","value":" and compare your value to the Solar luminosity, ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"S5wvRyH8S5"},{"type":"inlineMath","value":"3.8 * 10^{26}","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.8</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>26</mn></msup></mrow><annotation encoding=\"application/x-tex\">3.8 * 10^{26}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3.8</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">26</span></span></span></span></span></span></span></span></span></span></span></span>","key":"QBzwaWE334"},{"type":"text","value":" Watts. Is your value greater, less than, or equal to the Solar luminosity?","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LpIS2nb23F"}],"key":"t7qEnCDVHt"}],"class":"tip","key":"UlPTQr6uKK"}],"visibility":"show","key":"GypVc5krTc"}],"key":"FBga1cNcYo"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"The Python Ecosystem and Virtual Environments","url":"/environments","group":"Week  0"},"next":{"title":"A Deep Dive into Variables and Datatypes","url":"/variables-datatypes-2025","group":"Week  1"}}},"domain":"http://localhost:3002"}