{"kind":"Notebook","sha256":"d455e6fea7d8a19bdf31c0de3b36553f001e16c5e7ab790543c3676b5c776a05","slug":"functions","location":"/01_Lectures/Week 4/functions.ipynb","dependencies":[],"frontmatter":{"title":"Functions in Python","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"functions.ipynb","url":"/build/functions-2710855c8f81cd33911c93723f867d20.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Functions in programming languages work the say way as in mathematics. For example, you will be familiar with trigonometric functions:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tRvbAGU50n"}],"key":"squaW3XnvY"},{"type":"math","value":"f(x) = sin(x)","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) = sin(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"1","key":"uverkaSCMn"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"yJY3TRtouw"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this case, we have some ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L4R1VrxJBz"},{"type":"inlineCode","value":"function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JqllSzqcRQ"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fq1V8Et33u"},{"type":"inlineMath","value":"f","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>","key":"BGd7K5M3Mb"},{"type":"text","value":", which has parenthesis defining its arguments (in this case, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"isG9Jc78Uj"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rxjubis46e"},{"type":"text","value":"). In this case, we are returning ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rN3qomoKHw"},{"type":"inlineMath","value":"sin(x)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">sin(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>","key":"wOAi51hvX0"},{"type":"text","value":", though we could have constructed an arbitrary function of other functions, e.g., ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iDvGHhGdBU"},{"type":"inlineMath","value":"f(x) = sin(x)cos^2(x)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x) = sin(x)cos^2(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">co</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>","key":"WQTBsRZRq8"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vTZQUkTpAY"}],"key":"tsyqeAbkhv"}],"data":{"type":"notebook-content"},"key":"KJOCKNk12g"},{"type":"block","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"bjLWjVBNb0"}],"key":"ehqiANlGkO"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"As a reminder, we are already ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XFpo5s78jD"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"using","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TvOSnRvkS7"}],"key":"vdgasYzDml"},{"type":"text","value":" functions in Python all the time --- we are simply using functions built into the language, such as the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ld9QAn3SMl"},{"type":"inlineCode","value":"list()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cTeFPK0eoU"},{"type":"text","value":" function to generate a list, or the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LFgcYD1qOm"},{"type":"inlineCode","value":"np.min()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DaK8gkCakU"},{"type":"text","value":" function to return the minimum value from some collection.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Uxi7b6Ilw1"}],"key":"vpitYPOGu0"}],"key":"ECDfJN63eJ"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"cRD13Lv2N6"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now let’s define a Python function. Let’s make a function that returns the combination of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"suEzHtNOQ7"},{"type":"inlineCode","value":"sin","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GTdZBHsi0Q"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WP26NIUk7r"},{"type":"inlineCode","value":"cos","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yVqzTW7U0j"},{"type":"text","value":" squared above.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Cl8CoWqQDF"}],"key":"Q7G1XYPmLn"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"ukaQhNJtgp"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\ndef f(x):\n    answer = np.sin(x)*np.cos(x)**2 \n    return answer","key":"DkbAQVp9j8"},{"type":"output","id":"p09yziJ1bq9qmjQrwVH4O","data":[],"key":"gCVEdGwbOP"}],"data":{"type":"notebook-code"},"key":"SQw1l9Riep"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we are using the special Python ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qFJ0CTh5kx"},{"type":"inlineCode","value":"reserved","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FejWCrmsX1"},{"type":"text","value":" word ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bu2pGZDNNA"},{"type":"inlineCode","value":"def","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o08Jt2N7RS"},{"type":"text","value":" to define the name of the function (here ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uIUYEFYjYT"},{"type":"inlineCode","value":"f","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qL4S3sFP33"},{"type":"text","value":"), and in parenthesis, we add the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k7ogpJpAhk"},{"type":"inlineCode","value":"arguments","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tnowcUgLW9"},{"type":"text","value":" to the function (here ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gzn54Z9lVW"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aophfH8xwT"},{"type":"text","value":"). We end the line in a colon (much like a loop).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AvVK6fI6Vr"}],"key":"UI1KBL23VB"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"c5SpzxSVme"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"“Inside” the function, we indent our code (four spaces or a tab) and then place any computations we want to carry out. Here, we compute ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gKWqg576Ss"},{"type":"inlineCode","value":"answer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RB55plEped"},{"type":"text","value":" to be the multiplication of our two trig functions.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LoM0l0Gr8w"}],"key":"yApXeYQ19V"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Finally, we use the reserved word ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lLKnTNuPHg"},{"type":"inlineCode","value":"return","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UODEPHC8X0"},{"type":"text","value":" to “return” this answer from the inside of the function back out into the rest of our code.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"f8y8b0CKGB"}],"key":"vjQyMSOknt"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"OH4EYy4PHP"}],"key":"G33o7Yd5PR"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This has to do with something called ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xpnFIXuR5u"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"scope","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xBH3EMwYVf"}],"key":"KhbwxwcPGH"},{"type":"text","value":", which we will get to shortly","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"DfSrHAZVUI"}],"key":"wJrH5FFHas"}],"key":"DJjvC5eUzg"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"PQDeww0Yg7"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HoSP4jzeUw"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"use","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IqkzZkT0ef"}],"key":"wb8m0Ev0B4"},{"type":"text","value":" our function, we simply call it:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ovhvHpSHAp"}],"key":"KqrewYtfC3"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"vmLksVSXeb"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"returned_answer = f(0.5)\nprint(returned_answer)","key":"JGTTDfOecP"},{"type":"output","id":"r-hlTKgGsoOdEkEwLZFFL","data":[{"name":"stdout","output_type":"stream","text":"0.3692301313020644\n"}],"key":"PNKTJz60B9"}],"data":{"type":"notebook-code"},"key":"aj6coXyI3U"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As we can see, the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iByQaopNzW"},{"type":"inlineCode","value":"answer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hxTCohomfw"},{"type":"text","value":" from the function gets stored in the variable ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b2OyoBUtVf"},{"type":"inlineCode","value":"returned_answer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XuSOAAMnF9"},{"type":"text","value":" as the output of the function. This should look familiar to how you call any Python function (including those imported from libraries, though they may be prepended with the library name, e.g., ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D2EaM2i1Qs"},{"type":"inlineCode","value":"np.function()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kuG2xsePfo"},{"type":"text","value":").","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oaNH1MxoBu"}],"key":"e4E3aF533T"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"u7ab8kTYAQ"}],"key":"mamFtkvVLF"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"While we first compute ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"y9xtAXHpOY"},{"type":"inlineCode","value":"answer","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KvwcczrX5w"},{"type":"text","value":" in the function, then return it, we could have simply returned the calculation (as it was one line), e.g.,","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RCQZs1dBd7"}],"key":"sffyMEF4uF"},{"type":"code","lang":"python","value":"def f(x):\n    return np.sin(x)*np.cos(x)**2","position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"key":"aruKMw0eHU"}],"key":"DtKYjYS6f8"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"jiWSWC9S1l"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Scope","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uT9xE8s6xB"}],"identifier":"scope","label":"Scope","html_id":"scope","implicit":true,"key":"uZMVEWfcSm"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"Jzr7yGX4gX"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Functions are useful for many reasons. To list some obvious ones, they allow a calculation to be encapsulated and the code ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nK3E0OJ0K0"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"reused","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gKbtwmpFDN"}],"key":"LQeEmVm6IV"},{"type":"text","value":". If we need the output of that multiplication many times in our code, we can call ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PYjflyvFz8"},{"type":"inlineCode","value":"f(x)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Eoi5d36eVA"},{"type":"text","value":" instead of writing out ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sEYP3YIAOX"},{"type":"inlineCode","value":"np.sin(x)*np.cos(x)**2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YLwcd3d9Px"},{"type":"text","value":". Now in this case, that’s not so bad --- but we can write functions with many more steps (lines of code).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Oh4OlXDmcr"}],"key":"xoEkIWPJRp"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"OHXTBryW1j"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Beyond that, functions are useful due to their ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yvyqclf4ZX"},{"type":"inlineCode","value":"local scope","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NXIEdhvxgu"},{"type":"text","value":". What does that mean?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zjXmXFAsuY"}],"key":"GiQFyvNsLp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"So far, when we have written scripts in python, we define ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bc91yn2ieW"},{"type":"inlineCode","value":"variables","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NispqHEyrU"},{"type":"text","value":" directly on lines of the file (or in the interpreter). At any later time, we can ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xBsOeJWGaU"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"access","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hTegHnoe8o"}],"key":"IQGqmPRJvZ"},{"type":"text","value":" those variables via their names.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aqMtx9tf3z"}],"key":"HAIyrUKFld"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"FPDMvBc63a"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mjjR5m9A4r"}],"key":"EI1wfQmin2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Try running ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ElrV97KB3V"},{"type":"inlineCode","value":"print(answer)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jBYRAA2Imd"},{"type":"text","value":", to get the value of the variable we defined in our function.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EJzhTkqeiG"}],"key":"AEy7gfLctw"}],"key":"yH9GU2394n"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"O0xaakkGFM"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You should find that we can’t!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m4rCOWrIpq"}],"key":"QHjQdFcS1M"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"BeltqoOR7p"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"print(answer)","key":"U7yjk4Tm6y"},{"type":"output","id":"5LMShbXYDqoGexZnt2PzL","data":[{"ename":"NameError","evalue":"name 'answer' is not defined","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[43manswer\u001b[49m)\n\n\u001b[0;31mNameError\u001b[0m: name 'answer' is not defined"}],"key":"ZgGsoRwE9l"}],"data":{"type":"notebook-code"},"key":"jb7hotXewk"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The reason ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jBhSkx1APO"},{"type":"inlineCode","value":"answer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FnqFWYj4lI"},{"type":"text","value":" is not defined is because any variable defined ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b16Vif3tCI"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"inside","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iZt1ESJdae"}],"key":"kyLAZm2o6t"},{"type":"text","value":" a function is local ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cH2i2s8yAJ"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"only to that function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xHpy0tvrQs"}],"key":"o7lNbPn1By"},{"type":"text","value":". You can think of it like an automotive assembly line at a factory. Raw materials (the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gKfDtwDheB"},{"type":"inlineCode","value":"arguments","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a3tkwr4pSo"},{"type":"text","value":") enter at one end, the factory uses a set of screws, bolts, etc., to build the car, and the final car is ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MAxsRihbVY"},{"type":"inlineCode","value":"returned","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xr8xvKrboH"},{"type":"text","value":". We are not concerned with the steps that happened inside the factory, and those variables (like tools) are reused every time the function is called.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CKJcWv17lu"}],"key":"vef5J1uzfk"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"bL7SxdXfB3"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"More formally, Python defines several levels of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wDNWbt6ZwA"},{"type":"inlineCode","value":"scope","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BWdGtJZuSk"},{"type":"text","value":". Scope defines where a variable is allocated and accessible. Variables made in a Python script are in the scope of that module. When you ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PNEiv58Hfy"},{"type":"inlineCode","value":"run","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KycaDetyTv"},{"type":"text","value":" that script, your interpreter can access any variable you made in the script.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tDwtOyl9Hb"}],"key":"TdYwdw0OBN"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"HrRjGfGEpC"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"a = 10 \nb = 20","visibility":"show","key":"c1MVSsJXLJ"},{"type":"output","id":"tyNf1TqjsWK6HHkVw8GCh","data":[],"visibility":"show","key":"S5TUfdEstk"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"Jpo6FIkL6M"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"print(a)\nprint(b)","key":"G4eQpPz4MH"},{"type":"output","id":"k-2k3V_TMGXnz5jOvhAsh","data":[{"name":"stdout","output_type":"stream","text":"10\n20\n"}],"key":"lbLlDkxpdO"}],"data":{"type":"notebook-code"},"key":"T858fZDWhj"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Functions define their own ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BrROyYTf41"},{"type":"inlineCode","value":"local scope","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D14xg11oCn"},{"type":"text","value":", which is limited just to the function. Variables made there only “exist” inside the function. That said, a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gGKj85NU6Z"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"can","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fbehlabB8e"}],"key":"hv3zmnTpxg"},{"type":"text","value":" retrieve variables from a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OIHINMDIGX"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"larger","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MFCkhAq9AQ"}],"key":"IJSF4aWLQW"},{"type":"text","value":" scope:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p3ullqWq08"}],"key":"HLpTxEtUYL"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"lwL6cQupvd"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"a = 10 \ndef f(x):\n    return a + x\n\nprint(f(10))","visibility":"show","key":"kw0kJpEw1c"},{"type":"output","id":"jW6F9DXXI1XstFTIFyOUM","data":[{"name":"stdout","output_type":"stream","text":"20\n"}],"visibility":"show","key":"EYttXalUrx"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"AwWUIRUqWW"},{"type":"block","children":[{"type":"admonition","kind":"danger","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Danger","key":"Ud4cftAytK"}],"key":"cZqfrp7xbq"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"It is generally considered ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"evETpQcrwA"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"bad practice","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KnS4ylTNEw"}],"key":"BG3AMSz5vj"},{"type":"text","value":" to use variables from a larger scope than the function within a function. Think about it: Functions are beneficial because they are self-contained units of callable code. We should be able to, for example, copy and paste our function into a different file and use it there. If the function relies explictly on variables outside the function, we can’t do this.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jdDFpePDJc"}],"key":"RzvCY9jL9d"}],"key":"qShRA3xx4J"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"TlY54V885a"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Type Annotations and Docstrings","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G0NXuptvOR"}],"identifier":"type-annotations-and-docstrings","label":"Type Annotations and Docstrings","html_id":"type-annotations-and-docstrings","implicit":true,"key":"q4ku7S7Txp"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"py05zYQiT4"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"So far, we’ve defined our functions minimally. But there are two steps we can take to make our functions better ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UTNZOKgnCw"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"documented","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iwg6unqBOP"}],"key":"GbFkrJSM3S"},{"type":"text","value":". Documentation is extremely important in code; we’ve covered comments, and this is the next step for making clear the behavior of our code. Let’s start with a new, slightly more complex function:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PTH2MJcJjV"}],"key":"QkPB2E1vOr"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"KiBzVvVeYy"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def kepler_period(sma_au):\n    return np.sqrt(sma_au**3/7.496e-6)","visibility":"show","key":"y5cH7agxor"},{"type":"output","id":"rOvOzlw0R4GAkviHP-_Nf","data":[],"visibility":"show","key":"GjeK47NcFC"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"xCgF14QzdZ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"kepler_period(1) #should give earth's year in days!","key":"QJgYdmUUVn"},{"type":"output","id":"PU6dzYQuEcqXsCRzn3Anx","data":[{"output_type":"execute_result","execution_count":41,"metadata":{},"data":{"text/plain":{"content":"365.2457835357012","content_type":"text/plain"}}}],"key":"hUt6fmAsDd"}],"data":{"type":"notebook-code"},"key":"x7jkZ0FQob"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Technically, this function is already more documented than our previous functions, because its ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tEE0RTaLDh"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"name","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UFCtNSoUI8"}],"key":"knMMhCoY1O"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZlDtrymrHp"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"arguments","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DzpQR6SKIv"}],"key":"Bz7W4EhgwG"},{"type":"text","value":" are clearer in defining what they should be. But we can do more. First, we will ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jcaYo6YEVh"},{"type":"inlineCode","value":"annotate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ei9w2lXGVp"},{"type":"text","value":" the arguments:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aH2fGZxcAA"}],"key":"JPQbZtTnzF"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"EGt01G2rZY"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def kepler_period(sma_au:float)->float: \n    return np.sqrt(sma_au**3/7.496e-6)","visibility":"show","key":"ACpwAt6LfN"},{"type":"output","id":"cbsWlnDVDD_V5muqryj-n","data":[],"visibility":"show","key":"nrYA4KsvJa"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"PClY5yemWL"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We add a colon to each argument and specify the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"au5fsXX9tW"},{"type":"inlineCode","value":"type","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ndohYLLpup"},{"type":"text","value":" (for example, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BA1B5i2bOZ"},{"type":"inlineCode","value":"float","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZQGWc9GoFi"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wCqepP3icW"},{"type":"inlineCode","value":"int","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uRvzWTFlNO"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m68NpkKL6s"},{"type":"inlineCode","value":"str","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g9cGqsh2WN"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cUmFnmyAnc"},{"type":"inlineCode","value":"dict","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TUJfXr7DLf"},{"type":"text","value":"), and at the end, we use an arrow (->) to indicate the return type of the function, before the final colon.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LnAbf92gpC"}],"key":"ZB6FtAkOuD"},{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Warning","key":"ZjU1bklFqe"}],"key":"pgjp7zxSTf"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"By default, Python does not ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GtcBl50smB"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"enforce","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"AJ7YLeiZHY"}],"key":"fSGKFo0HWr"},{"type":"text","value":" on execution that your inputs to functions match their type annotations. But external packages (like ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OQrKG09JDq"},{"type":"inlineCode","value":"mypy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ysn0WLcfTE"},{"type":"text","value":" or ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"i9tnBIsDls"},{"type":"inlineCode","value":"pydantic","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"c2Ff5xjEYO"},{"type":"text","value":") can be used with your code to do this.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JjN56gBRw4"}],"key":"LVTXFLkSJL"}],"key":"Tz659STUIX"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"xqGckM4O6r"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We’ll return to deeper questions about type annotations later (e.g., what if multiple types are acceptable?)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yFgetqYfYx"}],"key":"JzuwTaq46J"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For now, let’s add a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"C0cMBQBirG"},{"type":"inlineCode","value":"docstring","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xzevzSHE6C"},{"type":"text","value":" --- this is a specialized string within our function which can be used to verbose-ly define its arguments and returns.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Gw2zewBZPa"}],"key":"vKyXDs2C32"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"k54YWrdB7s"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def kepler_period(sma_au:float)->float: \n    \"\"\"\n    Returns the orbital period (in days) for solar system bodies given their semimajor axis length (in AU).\n\n    Parameters\n    ----------\n    sma_au: float\n        body's semimajor axis (sma) in AU units \n    \n    Returns\n    -------\n    period: float\n        the orbital period (in days). \n    \"\"\"\n    return np.sqrt(distance_au**3/7.496e-6)","visibility":"show","key":"CAHCCVlg3g"},{"type":"output","id":"KNrQMLLeeckUhIG3NHhV8","data":[],"visibility":"show","key":"ROoP3WJSRm"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"vHUVFZUvDo"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The docstring, defined with triple quotes (which allows multiline strings) now gives a sentence-long description of the function, defines the arguments and returns, and their data types, as well as notating optional arguments and indicating their default values. For a one line function, this is a bit overkill, but for functions you write for your research, it can be very useful to have good documentation. We can see the documentation for ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R67UtNSU4C"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"any","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"npoq8rSeEA"}],"key":"eH9zWc4EBt"},{"type":"text","value":" Python function via the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zpE1XWQnJm"},{"type":"inlineCode","value":"help()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H2gwHgThCG"},{"type":"text","value":" function:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NgS9a096Hk"}],"key":"hVTjiYGP54"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"r1p27PRPsf"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"help(kepler_period)","visibility":"show","key":"P1DfzneKp3"},{"type":"output","id":"ThlOj3iOU-9_S6HNBGwST","data":[{"name":"stdout","output_type":"stream","text":"Help on function kepler_period in module __main__:\n\nkepler_period(sma_au: float) -> float\n    Returns the orbital period (in days) for solar system bodies given their semimajor axis length (in AU).\n    \n    Parameters\n    ----------\n    sma_au: float\n        body's semimajor axis (sma) in AU units \n    \n    Returns\n    -------\n    period: float\n        the orbital period (in days).\n\n"}],"visibility":"show","key":"WEP8JRjdVp"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"DTK0Bv82Nl"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"There’s even more we can add. For example, the docstring for any ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PT2DwwsBKU"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qC3oR5x3F2"},{"type":"text","value":" function will be ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YOPZJFClVm"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"very","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NxX40Rpx1F"}],"key":"KLOODJUB4y"},{"type":"text","value":" verbose:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U59sHr4wlv"}],"key":"uXWVhncX11"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"YhFfCqPArR"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nhelp(np.argmax)","key":"GFAvZYGyL0"},{"type":"output","id":"98mY2WVA_xD8Nh2t_RYGG","data":[{"name":"stdout","output_type":"stream","text":"Help on _ArrayFunctionDispatcher in module numpy:\n\nargmax(a, axis=None, out=None, *, keepdims=<no value>)\n    Returns the indices of the maximum values along an axis.\n    \n    Parameters\n    ----------\n    a : array_like\n        Input array.\n    axis : int, optional\n        By default, the index is into the flattened array, otherwise\n        along the specified axis.\n    out : array, optional\n        If provided, the result will be inserted into this array. It should\n        be of the appropriate shape and dtype.\n    keepdims : bool, optional\n        If this is set to True, the axes which are reduced are left\n        in the result as dimensions with size one. With this option,\n        the result will broadcast correctly against the array.\n    \n        .. versionadded:: 1.22.0\n    \n    Returns\n    -------\n    index_array : ndarray of ints\n        Array of indices into the array. It has the same shape as `a.shape`\n        with the dimension along `axis` removed. If `keepdims` is set to True,\n        then the size of `axis` will be 1 with the resulting array having same\n        shape as `a.shape`.\n    \n    See Also\n    --------\n    ndarray.argmax, argmin\n    amax : The maximum value along a given axis.\n    unravel_index : Convert a flat index into an index tuple.\n    take_along_axis : Apply ``np.expand_dims(index_array, axis)``\n                      from argmax to an array as if by calling max.\n    \n    Notes\n    -----\n    In case of multiple occurrences of the maximum values, the indices\n    corresponding to the first occurrence are returned.\n    \n    Examples\n    --------\n    >>> a = np.arange(6).reshape(2,3) + 10\n    >>> a\n    array([[10, 11, 12],\n           [13, 14, 15]])\n    >>> np.argmax(a)\n    5\n    >>> np.argmax(a, axis=0)\n    array([1, 1, 1])\n    >>> np.argmax(a, axis=1)\n    array([2, 2])\n    \n    Indexes of the maximal elements of a N-dimensional array:\n    \n    >>> ind = np.unravel_index(np.argmax(a, axis=None), a.shape)\n    >>> ind\n    (1, 2)\n    >>> a[ind]\n    15\n    \n    >>> b = np.arange(6)\n    >>> b[1] = 5\n    >>> b\n    array([0, 5, 2, 3, 4, 5])\n    >>> np.argmax(b)  # Only the first occurrence is returned.\n    1\n    \n    >>> x = np.array([[4,2,3], [1,0,3]])\n    >>> index_array = np.argmax(x, axis=-1)\n    >>> # Same as np.amax(x, axis=-1, keepdims=True)\n    >>> np.take_along_axis(x, np.expand_dims(index_array, axis=-1), axis=-1)\n    array([[4],\n           [3]])\n    >>> # Same as np.amax(x, axis=-1)\n    >>> np.take_along_axis(x, np.expand_dims(index_array, axis=-1), axis=-1).squeeze(axis=-1)\n    array([4, 3])\n    \n    Setting `keepdims` to `True`,\n    \n    >>> x = np.arange(24).reshape((2, 3, 4))\n    >>> res = np.argmax(x, axis=1, keepdims=True)\n    >>> res.shape\n    (2, 1, 4)\n\n"}],"key":"W0ztRqPGeh"}],"data":{"type":"notebook-code"},"key":"uHHtr6IZs8"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can see the formatting is the same, but there are extra sections. You are welcome to add these to your own functions, but that is likely not neccesary until you begin distributing your code to others to use.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xcKPNJzAWY"}],"key":"PHlJaJYQYL"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"VZ0c3imScZ"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional Arguments","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ckr2q7hTly"}],"identifier":"optional-arguments","label":"Optional Arguments","html_id":"optional-arguments","implicit":true,"key":"w5UmcgpTNu"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"sscOBaAtv2"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Thus far, our kepler function has only one argument: the semimajor axis. This is possible because we use the constant slope derived for kepler’s laws that is specific to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T502Eyv0bL"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"our","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gyMbGEoUFv"}],"key":"YgmWIK4pEc"},{"type":"text","value":" solar system (depends on the Sun’s mass) and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p73W5i1mP3"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"our","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MLkct6EsoS"}],"key":"Aed6OLueog"},{"type":"text","value":" universe (depends on the magnitude of the gravitational constant ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ynro4mxUV6"},{"type":"inlineMath","value":"G","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>","key":"Er4zF4NDpC"},{"type":"text","value":").","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eP1a4hy8Ur"}],"key":"aUMcsi24Ie"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"jmAqiqq7w6"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The formula itself for Kepler’s third law is","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bIUyqDy3fi"}],"key":"eXcpXdog00"},{"type":"math","value":"\\frac{a^3}{P^2} = \\frac{G(M+m)}{4\\pi^2} \\approx \\frac{GM}{4\\pi^2}","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><msup><mi>a</mi><mn>3</mn></msup><msup><mi>P</mi><mn>2</mn></msup></mfrac><mo>=</mo><mfrac><mrow><mi>G</mi><mo stretchy=\"false\">(</mo><mi>M</mi><mo>+</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup></mrow></mfrac><mo>≈</mo><mfrac><mrow><mi>G</mi><mi>M</mi></mrow><mrow><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{a^3}{P^2} = \\frac{G(M+m)}{4\\pi^2} \\approx \\frac{GM}{4\\pi^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.1771em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4911em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0463em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">GM</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"2","key":"iDqgsFxkwp"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s implement this in our function, but ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qi5BLEwjQ8"},{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"x0Wtvex7Dx"}],"key":"KamgMIYbHj"},{"type":"text","value":" require the user to supply ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jxOrtpoUEj"},{"type":"inlineMath","value":"M","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>","key":"OR9P7zWupr"},{"type":"text","value":" and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AOzyNrZIaW"},{"type":"inlineMath","value":"G","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span>","key":"vWgQgcjCTN"},{"type":"text","value":" by default:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"K9MpTrEzmy"}],"key":"enyy95s8GK"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"VFgjv8THHy"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def kepler_period(sma_au:float,\n                  star_mass: float = 1.989e+30,\n                  G: float = 6.674e-11)->float: \n    \"\"\"\n    Returns the orbital period (in days) for solar system bodies given their semimajor axis length (in AU).\n\n    Parameters\n    ----------\n    sma_au: float\n        body's semimajor axis (sma) in AU units \n    star_mass: float, optional\n        mass of the stellar (dominating) body, in kg, default 1.989e30 (sun's mass)\n    G: float, optional\n        gravitational constant in SI units, default 6.674e-11\n    Returns\n    -------\n    period: float\n        the orbital period (in days). \n    \"\"\"\n    sma_meters = 1.496e+11 * sma_au \n    P_squared = (4*np.pi**2*sma_meters**3)/(G*star_mass)\n    return np.sqrt(P_squared)*1.15741e-5","visibility":"show","key":"efmLjUHi9l"},{"type":"output","id":"aebAf3j17fqdAyzrmahql","data":[],"visibility":"show","key":"hEtM98WB5L"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"nXsPJJpZ1s"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s test that our function can still work with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lBTnNNgaml"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"just","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zBK0v1bttO"}],"key":"zf5pEnIgju"},{"type":"text","value":" a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UMB0DsVwmR"},{"type":"inlineCode","value":"sma_au","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wLVfV4cNgZ"},{"type":"text","value":" provided (and of course that it is still correct!)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DVF6B8kC4k"}],"key":"eGejlHsUed"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"s75OAZUzUl"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"kepler_period(1)","key":"hCkGxv1Pn8"},{"type":"output","id":"ZFNtRH6HlCvfp4eLeivnm","data":[{"output_type":"execute_result","execution_count":50,"metadata":{},"data":{"text/plain":{"content":"365.21953254318385","content_type":"text/plain"}}}],"key":"nL6PrlzM1q"}],"data":{"type":"notebook-code"},"key":"puTtFwFzdX"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With a bit of extra unit massaging (putting everything in SI units, then converting the end result from seconds to days), we see we get earth’s period out accurately. However, if we wished, we could now start playing with solar system parameters:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"muo7wCpsTY"}],"key":"hx50D3vpxW"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"oGkS7liZzD"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"kepler_period(1,star_mass=5e30)","visibility":"show","key":"Z2se5haA84"},{"type":"output","id":"5MxWTGKe6_LluGsBZZ-Cp","data":[{"output_type":"execute_result","execution_count":51,"metadata":{},"data":{"text/plain":{"content":"230.34902887820553","content_type":"text/plain"}}}],"visibility":"show","key":"sAprN8629g"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"RUZrKgXZLh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"So if our sun were ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"diSbZ1bjyH"},{"type":"inlineMath","value":"5\\times10^{30}\\; \\rm kg","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>30</mn></msup><mtext>  </mtext><mrow><mi mathvariant=\"normal\">k</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">5\\times10^{30}\\; \\rm kg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">30</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">kg</span></span></span></span></span>","key":"TF7EvXbVFk"},{"type":"text","value":" rather than  ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jVmGO97uLB"},{"type":"inlineMath","value":"2\\times10^{30}\\; \\rm kg","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>30</mn></msup><mtext>  </mtext><mrow><mi mathvariant=\"normal\">k</mi><mi mathvariant=\"normal\">g</mi></mrow></mrow><annotation encoding=\"application/x-tex\">2\\times10^{30}\\; \\rm kg</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">30</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">kg</span></span></span></span></span>","key":"p0pNJZfnbO"},{"type":"text","value":", the earth’s year would only be 230 days long.\nNotice that because ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ihcTnFNEoS"},{"type":"inlineCode","value":"star_mass","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LIJCM2uIMp"},{"type":"text","value":" is a non-positional argument, we had to give its name explicitly when adding it in. This is why optional arguments are also called ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GycaoLrc7n"},{"type":"inlineCode","value":"keyword","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vHoP5n3GY4"},{"type":"text","value":" arguments --- we can give some, none, or all, and in any order (after the positional arguments).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U6VVilH3Bb"}],"key":"Qp05g8KX60"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"Wxymt9mcbl"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Warning","key":"iadtNtDCIq"}],"key":"fJ0HNGKp7p"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When defining a function that has both ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kpkIHWWM70"},{"type":"inlineCode","value":"positional","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nXvotSVXT6"},{"type":"text","value":" (required) and optional arguments, the positional arguments must come first, Thus,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sOcvZGE2Vu"}],"key":"OojVdo0vLQ"},{"type":"code","lang":"python","value":"def func(a,b,c=1,d=3):\n    ...","position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"key":"PqKUC7HU1c"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"is legal, but","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"p9NRVK3Wva"}],"key":"d48YcgfUSl"},{"type":"code","lang":"python","value":"def func(a=2,b,c,d):\n    ...","position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"key":"HE2luX6Je5"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"is not.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"w2pPSlzLXj"}],"key":"T7QqD5CASJ"}],"key":"YA5qv7iQPh"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"Rp0tRIvRcs"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As a (quick) preview of what is to come, here’s that same function again, but I’ll allow the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fnodLU63XI"},{"type":"inlineCode","value":"astropy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mlTnA1OSwz"},{"type":"text","value":" package to handle all the unit conversions for us:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SQRZWohsqC"}],"key":"FbjcDDXMC5"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"EEWGlppkpo"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import astropy.units as u \nimport astropy.constants as ac\ndef kepler_period(sma:u.Quantity,\n                  star_mass: u.Quantity = 1*u.Msun,\n                  G: u.Quantity = ac.G)->u.Quantity: \n    \"\"\"\n    Returns the orbital period (in days) for solar system bodies given their semimajor axis length in any length units.\n\n    Parameters\n    ----------\n    sma: u.Quantity\n        body's semimajor axis (sma) in any length units\n    star_mass: u.Quantity, optional\n        mass of the stellar (dominating) body, in any mass units\n    G: u.Quantity, optional\n        gravitational constant in any appropriate units.\n    Returns\n    -------\n    period: u.Quantity\n        the orbital period (in days). \n    \"\"\"\n    P_squared = (4*np.pi**2*sma**3)/(G*star_mass)\n    return np.sqrt(P_squared).to(u.day)","visibility":"show","key":"Y6HqWKPH4B"},{"type":"output","id":"esZsm5UHi28hAQEzVnTlZ","data":[],"visibility":"show","key":"NnRkZlWYJF"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"WaBOlOKebe"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"print(kepler_period(sma=2.1*u.AU, star_mass=2*u.Msun))\nprint(kepler_period(sma=1*u.AU))","visibility":"show","key":"L3Av4pPZ4d"},{"type":"output","id":"_eqCeB3npcayMmF3vzap6","data":[{"name":"stdout","output_type":"stream","text":"785.9815854803609 d\n365.2568983840419 d\n"}],"visibility":"show","key":"MIpsX0pQa7"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"AT8UhdrDm4"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extra arguments and keyword arguments, Packing, and Unpacking","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gq1BwtrUNL"}],"identifier":"extra-arguments-and-keyword-arguments-packing-and-unpacking","label":"Extra arguments and keyword arguments, Packing, and Unpacking","html_id":"extra-arguments-and-keyword-arguments-packing-and-unpacking","implicit":true,"key":"z65t4nNE8F"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"Hjx7RsYRgM"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In some cases, it is useful to define a function which takes in an arbitrary set of arguments.\nFor example, if the output of a previous function produces an unknown number of items, we may wish to admit all of them to the next function we call.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T1gEYl6SXk"}],"key":"PyQhMIyJoZ"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"IVnybF9e4j"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will handle this using a Python technique known as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oktD4JpmhN"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"packing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BNsKxtyIdX"}],"key":"vi91vFuVnn"},{"type":"text","value":" (and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gQMSy5272Z"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"unpacking","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BfFeOZtl4P"}],"key":"C3xdoKQXqf"},{"type":"text","value":").\nThis is a special operation that allows iterables (e.g. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JGBTowg3Bp"},{"type":"inlineCode","value":"lists","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gX6sUfdRtn"},{"type":"text","value":" or ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kegzvYdt7h"},{"type":"inlineCode","value":"dictionaries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yJ1UODL6S5"},{"type":"text","value":") to be created from function argument lists, or to be turned ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iz2Mk2XRV6"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"into","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xQvfZ1y5Fq"}],"key":"uaZ0ejlDPc"},{"type":"text","value":" inputs to a function.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R3osvOPgUT"}],"key":"FJtMoXO3vk"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Let’s see an example:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WOtca10AoS"}],"key":"hHYHrumjVZ"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"BhgKx1a2Wd"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"args = [1,2,3]\nmagnitude(*args)","visibility":"show","key":"r9Oa4FTMXq"},{"type":"output","id":"5My37cQbw1qxt-zMTX226","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"3.3010299956639813","content_type":"text/plain"}}}],"visibility":"show","key":"BbABhUj9NX"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"ohQcvXDeNR"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"What happened here? Our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d3R83x5vOo"},{"type":"inlineCode","value":"magnitude()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O7kEk9Ayg9"},{"type":"text","value":" function, recall, takes 3 inputs. But ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QxIsVnGjhs"},{"type":"inlineCode","value":"args","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MRTykwirgs"},{"type":"text","value":" is a single list.\nUnder the hood, the asterisk in the function call tells Python to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zbtbzdDzyD"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"unpack","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hlqa7CwcH4"}],"key":"TwdBhedose"},{"type":"text","value":" the list and feed each value as a separate argument to the function, in order.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y1N7jWa8OO"}],"key":"XUSguoMZqq"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"VpQm42cYya"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can play a similar game with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Og6n3nKrJm"},{"type":"inlineCode","value":"dictionaries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YQzT6TkM7v"},{"type":"text","value":" --- here, we will need a double-asterisk:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jjdP383eFH"}],"key":"Zk5qn2Fja4"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"CgrNvjrasz"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"kwargs = {'flux_1':1,'flux_2':2,'zeropoint':3}\nmagnitude(**kwargs)","visibility":"show","key":"mVrTGfxyQx"},{"type":"output","id":"S-HBw3e5ydiIo7Dzsu8GL","data":[{"output_type":"execute_result","execution_count":28,"metadata":{},"data":{"text/plain":{"content":"3.3010299956639813","content_type":"text/plain"}}}],"visibility":"show","key":"WJDUCMwdiU"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"tBUJvcGy5P"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Essentially, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F7zKEQdUec"},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WK9KDe2OoV"},{"type":"text","value":" in the function call gets translated to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N7tKwJAxEP"},{"type":"inlineCode","value":"flux_1=1,flux_2=2,zeropoint=3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xJcQbmd0VU"},{"type":"text","value":", as we would normally provide the function.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UzymZiR6dZ"}],"key":"UAmVgT8Iou"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"wCCvNfnUN9"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"These are examples of unpacking a single object into parts to feed into a function. What about the reverse?\nLet’s start with an example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v5dtYGWEXs"}],"key":"vWDQbJlaSF"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"rhwvH0EwPw"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def dist_from_parallax(*args):\n    \"\"\"Simple function to return distance (pc) from a parallax (in ''). \n    Takes any number of input parallaxes and returns a list of distances.\n    \"\"\"\n    return_list = []\n    for parallax in args:\n        return_list.append(1/parallax)\n    return return_list","visibility":"show","key":"Kul6oirJtW"},{"type":"output","id":"-4ajqWZ9GBJrxmlAk-yze","data":[],"visibility":"show","key":"Ss3Bbhhcwe"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"BncPNJ7FLf"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When we use the asterisk operator in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wmSvL5xgZL"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"definition","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mWscswDrpa"}],"key":"MLrRVVznox"},{"type":"text","value":" of a functions arguments, we do the reverse of the unpacking above.\nHere, we take any inputs to the function (an arbitrary number of inputs), and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ug5gSuqhY0"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pack","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aTc9T3dXA8"}],"key":"gL9aeHC77F"},{"type":"text","value":" them into a list we are calling ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rN4UT57TgT"},{"type":"inlineCode","value":"args","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PKNL1ra5me"},{"type":"text","value":".\nThat list ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bEvy1HzPEP"},{"type":"inlineCode","value":"args","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gsKGg2QaQQ"},{"type":"text","value":" is available inside the function, where we loop over it to calculate distances from the inputs (assuming they are parallaxes).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jaw8RDhvhl"}],"key":"QvtkBuHFEb"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"EadipHpPAO"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dist_from_parallax(1)","visibility":"show","key":"pl0I7L7QId"},{"type":"output","id":"PesNMGa2mN6ENDOzKIp1b","data":[{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"[1.0]","content_type":"text/plain"}}}],"visibility":"show","key":"nbmpHS6Gzi"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"sCxFY5YfS8"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"dist_from_parallax(1.6,4.5,3.2,7.6,10.1)","visibility":"show","key":"iyYzn0MTUV"},{"type":"output","id":"QDUdkTtcX6t-_btBF01f5","data":[{"output_type":"execute_result","execution_count":31,"metadata":{},"data":{"text/plain":{"content":"[0.625, 0.2222222222222222, 0.3125, 0.13157894736842105, 0.09900990099009901]","content_type":"text/plain"}}}],"visibility":"show","key":"rNRmyJppoN"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":""},"tags":[]},"visibility":"show","key":"lKExdFdg0A"},{"type":"block","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"T7zReDIEe4"}],"key":"KWrwp54KJm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In practice, it would probably better to write this function to expect a single iterable (","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mKCv7731H6"},{"type":"inlineCode","value":"list","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"h3WVCbp4SH"},{"type":"text","value":" or ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"r91PDgO0Xu"},{"type":"inlineCode","value":"array","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tqFKBNyUWf"},{"type":"text","value":"), and to do the calculation in a vectorized way.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pv4eaaEcsZ"}],"key":"Iy3zyM5Nba"}],"key":"FjeN0WcCKP"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"VK3JvuDVbZ"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can play the same game with keyword arguments (i.e., ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pa48xMlvDp"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pack","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TCda6UJWbZ"}],"key":"Kv2MRUD4vq"},{"type":"text","value":" extra arguments given with names (like ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MtiVWCADBf"},{"type":"inlineCode","value":"star_mass=10*u.Msun","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FXuzcRLflc"},{"type":"text","value":") into a dictionary accessible in the function.\nHere I’ll use an example more typical --- adding ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EiQjX5DcOf"},{"type":"inlineCode","value":"kwargs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QwGu2MuiN1"},{"type":"text","value":" to a function that already has some arguments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WgPPrU7ZW5"}],"key":"YAL9Igrk9T"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"xqC7FCVcxt"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"def get_solarsystem_periods(semi_major_axes:list,**kwargs)->list:\n    periods = []\n    for i in semi_major_axes:\n        periods.append(kepler_period(i,**kwargs))\n    return periods","visibility":"show","key":"UIg6wlEVUn"},{"type":"output","id":"uT8-VBXjwtk_j3soTqxf6","data":[],"visibility":"show","key":"XrwdtvJ7fP"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"x3iBjiqWyu"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here, I’ve made what a coder would call a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P1fvdEiPBI"},{"type":"inlineCode","value":"wrapper","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R2fF2mZ8mj"},{"type":"text","value":". This function’s goal is to get the periods for a list of input semimajor axes (i.e., feed in the sma for Mercury, Venus, Earth,...), then spit out a list with all the periods.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V4FynR90CM"}],"key":"btqUt6fmzN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We know that our ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LnPGfBqwhq"},{"type":"inlineCode","value":"kepler_period()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"U4SrS1voLU"},{"type":"text","value":" function needs that one input (here, fed in from the loop as ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hs598tMVmP"},{"type":"inlineCode","value":"i","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fThennEGUF"},{"type":"text","value":"), but that it ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CaAwjC2NVB"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"can","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Cb7HF2I3rg"}],"key":"y53xDEwjGC"},{"type":"text","value":" take extra parameters for the star mass and gravitational constant. Instead of making those ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vKmGmoRTNn"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"explicit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gVH6oNFeO3"}],"key":"mD10yPGCR1"},{"type":"text","value":" arguments of our wrapper, we can use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gsC6spBzmD"},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oHpyN4JRfd"},{"type":"text","value":" to tell it to take any extra arguments and make a dictionary out of them.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ajutC67YBs"}],"key":"SLpsmTbb84"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"NVNNpzAFsP"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Inside our function, there is now a variable called ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KiuMwOg6Nd"},{"type":"inlineCode","value":"kwargs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E5lvJLnY2c"},{"type":"text","value":" which is a dictionary. We ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IC1wXZNlwm"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fony5g5qWQ"}],"key":"Y0n2LjlPeu"},{"type":"text","value":" do stuff with it here, if we desired. But I simply pass it into our internal call to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p2s8VmXgHc"},{"type":"inlineCode","value":"kepler_period()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ldttIcvaDy"},{"type":"text","value":". Note that I use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z3mYDFNDDf"},{"type":"inlineCode","value":"**","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XUAibfabzD"},{"type":"text","value":" operator ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dj8PJziFkh"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"again","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q57g0R1Bz2"}],"key":"nS3f6DxBsp"},{"type":"text","value":", now to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bxuu5v8j9M"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"unpack","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hduJhL8bGj"}],"key":"CzwB3wYlUs"},{"type":"text","value":" that dictionary back into functional arguments.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PVQhD85hcJ"}],"key":"aYuJnyXk05"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"URYRW35gWc"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Warning","key":"Ff7KJerDCa"}],"key":"jih05szLqG"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Can you see a way this could currently go wrong? There is a circumstance when passing kwargs to our wrapper that will generate an error.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fudZAf1eYe"}],"key":"bmMg7NH3dt"}],"key":"uvdaquNyMy"},{"type":"admonition","kind":"warning","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"See Answer","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"X0BrNjecsK"}],"key":"D4jOMavXQg"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Because ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"n4WT9m2IaA"},{"type":"inlineCode","value":"kepler_period()","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Bc6uCUHVSj"},{"type":"text","value":" does not accept arbitrary kwargs, if we ran ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LbeOouLylH"},{"type":"inlineCode","value":"get_solar_system_periods([1*u.AU,2*u.AU],star_mass=10*u.Msun,bad_arg=10)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"COVs0lb7pO"},{"type":"text","value":", we would get an error because ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"meQHoptL7c"},{"type":"inlineCode","value":"bad_arg","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"kuNMqa1aEK"},{"type":"text","value":" would be passed to ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"D8GJ23sNAt"},{"type":"inlineCode","value":"kepler_period()","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KQGOC71XUH"},{"type":"text","value":" which does not have that argument defined.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LENCptdIZz"}],"key":"LdaQ1ykfS0"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We could stay safe from this by adding ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wLVbqy5yPe"},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lVMOZ3wJrY"},{"type":"text","value":" as an argument to ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HlNWHnOEnw"},{"type":"inlineCode","value":"kepler_period()","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IeftG5VIG9"},{"type":"text","value":", then any proper (defined) kwargs would be caught, and extra ones would get shoved into a dictionary that could be safely ignored.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"P1B9cyKLqS"}],"key":"OPEK6ORfrF"}],"key":"myCSFIlvoN"}],"data":{"type":"notebook-content","editable":true,"slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"f3kUpYVKt0"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Go1kCClX9W"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"nGQtK6LSx3"}],"data":{"type":"notebook-content","slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"z6i3iZlHbt"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KFf0AszZ9P"}],"identifier":"summary","label":"Summary","html_id":"summary-1","implicit":true,"key":"CD23cMQk3s"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"Functions","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z09KBE7uq9"},{"type":"text","value":" allow us to encapsulate short (ish), general tasks into a clean, easy to debug framework","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XfjsbEXF3g"}],"key":"FWuZXPSFep"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Because of their local scope, we can be sure all variables passed through are treated the same way","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"a22QLDwGxg"}],"key":"pPXvkC1Bth"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Functions take arguments, including required (positional) and optional (keyword) ones.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aowtL9seG8"}],"key":"lmer2C67s5"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"One can use ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jKE4FH55Zg"},{"type":"inlineCode","value":"*args","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cogRRqeyrr"},{"type":"text","value":" and ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"IWmWCIms83"},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hqhgWPCx60"},{"type":"text","value":" to allow arbitrary inputs, or to unpack ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Ca0CLCQAxo"},{"type":"inlineCode","value":"lists","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iMdxX6qiu2"},{"type":"text","value":" and ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KfxNlLW6EI"},{"type":"inlineCode","value":"dicts","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ZvbA3TDDLP"},{"type":"text","value":" into function calls","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rYFrSyZBJp"}],"key":"k6Yaz74RSj"}],"key":"pmHpWWeGtE"}],"data":{"type":"notebook-content","slideshow":{"slide_type":"slide"},"tags":[]},"visibility":"show","key":"nam7XGIlGP"}],"key":"TQhd7lOhu3"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Looping in Python","url":"/loop-lecture","group":"Week  3"},"next":{"title":"Unix Scavenger Hunt!","url":"/hunt","group":"Week  1"}}},"domain":"http://localhost:3000"}