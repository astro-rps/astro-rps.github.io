{"kind":"Notebook","sha256":"6df6438c949527ddd87ede2bf6e91389bcdd899a433458ee37057ad2311be519","slug":"loop-lecture","location":"/01_Lectures/Week 3/loop_lecture.ipynb","dependencies":[],"frontmatter":{"title":"Looping in Python","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"loop_lecture.ipynb","url":"/build/loop_lecture-f0939c5b907156a5865d4729566f62d1.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Part 1: “for-loops” and “while-loops”","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xJ7TFL4FKX"}],"identifier":"part-1-for-loops-and-while-loops","label":"Part 1: “for-loops” and “while-loops”","html_id":"part-1-for-loops-and-while-loops","implicit":true,"key":"wADuLXDKyV"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This week we will be discussing basic iterable objects (lists, arrays, tuples ...) and how you can use them to repeat operations.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BXMAkinCUQ"}],"key":"Sfh9HjKzPd"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For example lets say you want to print something out several times. Last week you learned some numpy basics so lets start with that...","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TDN9A5l7so"}],"key":"Z6EyF1nuGt"}],"data":{"type":"notebook-content"},"key":"p44PzpznRx"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np #importing numpy\n\nprint(np.arange(5)) # this is an array with 5 elements","key":"gRFfArXy5e"},{"type":"output","id":"GWzq709Cx4OwPdsDJkB9Q","data":[{"name":"stdout","output_type":"stream","text":"[0 1 2 3 4]\n"}],"key":"ZYm2JDHe4q"}],"data":{"type":"notebook-code"},"key":"n1XxC5h97a"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# start the for loop\nfor i in np.arange(5): # pay attention to the syntax (\":\") here! \n    print(i)","key":"O5kEiz1wgV"},{"type":"output","id":"lelnAHTatOXyZAnx07GZR","data":[{"name":"stdout","output_type":"stream","text":"0\n1\n2\n3\n4\n"}],"key":"Yt3BI6Y2US"}],"data":{"type":"notebook-code"},"key":"SmV22yL9qh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This is an example of a “for-loop” which is the most basic looping fucntionality in Python.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v11yMRHjWC"}],"key":"pxQdhkpYU0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It is intiialized by typing ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MGVpxavTfG"},{"type":"inlineCode","value":"for","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uZQk1gRVPH"},{"type":"text","value":" in front of the the variable ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y73i1nX3Ev"},{"type":"inlineCode","value":"i","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EaR8t3J6zm"},{"type":"text","value":" which is a an element ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LHejFbmenw"},{"type":"inlineCode","value":"in","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L1WX3fY7hT"},{"type":"text","value":" the iterable ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YFJTcAeFUx"},{"type":"inlineCode","value":"np.arange(5)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eGttUBcD7Y"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EByEiE41Y3"}],"key":"fabLgJP57Z"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"It works by iterating over each element in the numpy array. Importantly, the variable ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"m1OMvhG6Wm"},{"type":"inlineCode","value":"i","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"U8bn1zeurq"},{"type":"text","value":" can be anything as long as you are consistent.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zmAv4fM7Kl"}],"key":"HGXeSUtawI"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"It is effectively a dummy variable that represents each element in the iterable.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Zwe1no8KNp"}],"key":"krBnJj5uqx"}],"data":{"type":"notebook-content"},"key":"XySB0C9OoZ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"for wowza in np.arange(5): #now instead of \"i\" I used the \"wowza\" variable\n    print(wowza)","key":"TDNgRchuuy"},{"type":"output","id":"5ovt-UwfR-UxXb4IlLX5W","data":[{"name":"stdout","output_type":"stream","text":"0\n1\n2\n3\n4\n"}],"key":"KNVb51kanp"}],"data":{"type":"notebook-code"},"key":"NBlnxHkBOI"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You could do somethign similar with a “while-loop” which unlike the “for-loop” iterates as long as some condition is met. For example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L6ESTo36ee"}],"key":"GSmC4DJgEo"}],"data":{"type":"notebook-content"},"key":"R3p01jnQqG"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize a counter\ncounter = 0\n\n# Define the condition for the while loop\nwhile counter < 5:\n    print(counter)\n    counter += 1  # Increment the counter","key":"iF2e7AYcaX"},{"type":"output","id":"yuk8t2mApXm2OXMtRUBgr","data":[{"name":"stdout","output_type":"stream","text":"0\n1\n2\n3\n4\n"}],"key":"K7pRH1siuh"}],"data":{"type":"notebook-code"},"key":"S6ZgD38HLN"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TBH, I have never used a “while loop” and don’t see any advantage of it compared to a “for loop”.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N7mCCUzYe1"}],"key":"IM7mPRSIPs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Intially, you might not see this looping business as incredibly useful but lets take a more complicated example...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZpM4d9L33A"}],"key":"It6LYekult"}],"data":{"type":"notebook-content"},"key":"I15h3q0TN6"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the height of the tree\nheight = 5\n\n# Using a for loop to print a Christmas tree\nfor i in range(1, height + 1): \n    spaces = \" \" * (height - i)\n    stars = \"*\" * (2 * i - 1)\n    print(spaces + stars)","key":"nIXzsM07mI"},{"type":"output","id":"TW7wMLQQh0CjGJniUQF9k","data":[{"name":"stdout","output_type":"stream","text":"    *\n   ***\n  *****\n *******\n*********\n"}],"key":"bgWaQhxV1O"}],"data":{"type":"notebook-code"},"key":"kgvwD4u9FD"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This would be kind annoying to print out by actually typing out the spaces and the stars, especially if you want to make the tree larger..","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l1NWPGPuIr"}],"key":"wV38fugwSk"}],"data":{"type":"notebook-content"},"key":"maZqvJM9lc"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the height of the tree\nheight = 12\n\n# Using a for loop to print a Christmas tree\nfor i in range(1, height + 1): \n    spaces = \" \" * (height - i)\n    stars = \"*\" * (2 * i - 1)\n    print(spaces + stars)","key":"xMZyBF3t8O"},{"type":"output","id":"uDrTt89d0JTCd0YRkF2lm","data":[{"name":"stdout","output_type":"stream","text":"           *\n          ***\n         *****\n        *******\n       *********\n      ***********\n     *************\n    ***************\n   *****************\n  *******************\n *********************\n***********************\n"}],"key":"U5CxZOJqzk"}],"data":{"type":"notebook-code"},"key":"uNNv3L147m"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Above we have the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BQjHfctLyv"},{"type":"inlineCode","value":"range","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jA56RXF6Xn"},{"type":"text","value":" function which creates a “range” instance. This is another example of an iterable","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s2VgWZz3EN"}],"key":"H9PVqeNiFE"}],"data":{"type":"notebook-content"},"key":"B4bPLjS3fe"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 2: Iterables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pk3tNBXqJD"}],"identifier":"part-2-iterables","label":"Part 2: Iterables","html_id":"part-2-iterables","implicit":true,"key":"nIr3Qm63l3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Okay so now that we have the basic syntax of these two loops, lets talk iterables. Lets start with a list","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OF5v4SmMiM"}],"key":"MZjnaWdxeo"}],"data":{"type":"notebook-content"},"key":"Nptf3xZezH"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"my_grocery_list = [\"apples\", \"oranges\", \"dorritos\", \"mustard\", \"eggs\", \"gummy bears\"] \n# pay attention to the syntax here! ([] square brackets!)","key":"GkLLKEnwFl"},{"type":"output","id":"yIPnd2GKEBnQD_LCw5WdQ","data":[],"key":"cg4bskm5XQ"}],"data":{"type":"notebook-code"},"key":"OGWbSGThiw"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"how many things do I have in my list? and what is each element? and can I iterate over these random things that aren’t integers?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Myqx9eyr93"}],"key":"bmBYAh9gTP"}],"data":{"type":"notebook-content"},"key":"jFQivHJyix"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"print( len(my_grocery_list) )\n\nprint( type(my_grocery_list[2]))","key":"x8whVQpz6x"},{"type":"output","id":"Y_STBeqHidO8q8wF2vZ1M","data":[{"name":"stdout","output_type":"stream","text":"6\n<class 'str'>\n"}],"key":"HdpqtSqKk3"}],"data":{"type":"notebook-code"},"key":"Qr2ozmCyZB"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"for food in my_grocery_list[3:5]:\n    print(\"oh shoot I forgot the\", food)","key":"U2PYTZuA2O"},{"type":"output","id":"CekZ0egF8h4A7XfojJ-do","data":[{"name":"stdout","output_type":"stream","text":"oh shoot I forgot the mustard\noh shoot I forgot the eggs\n"}],"key":"WPEtvLGvkM"}],"data":{"type":"notebook-code"},"key":"OrKWi8yf4G"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As we can see there are 6 ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pujwJFMvaF"},{"type":"inlineCode","value":"str","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yWYwFeQ7Qg"},{"type":"text","value":" elements in the list and iterating over the 3rd and 4th element is perfectly easy!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GcgrB3F6Xt"}],"key":"fxAjMPKEBl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In other words the iterable can be an interger, a string, a list itslef, basically any data type! Lets now loop over a dictionary!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"peCwQlQpTP"}],"key":"NAz93lMT2Z"}],"data":{"type":"notebook-content"},"key":"iyHVEJhTb4"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Define a treasure map dictionary\ntreasure_map = {\n    'Start': 'You find yourself on a mysterious island.',\n    'Palm Tree': 'Under the palm tree, you discover a clue written in the sand.',\n    'Cave Entrance': 'Following the clue, you reach the entrance of a dark cave.',\n    'Treasure Room': 'After navigating through the cave, you discover the hidden treasure room!',\n    'X marks the spot': 'You find the treasure chest buried under a giant \"X\" on the floor.'\n}","key":"Vixep3CgYu"},{"type":"output","id":"p0SIs_lkI1PpCpdCs2fuk","data":[],"key":"NvwHm6udci"}],"data":{"type":"notebook-code"},"key":"C0UnyNhexo"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Use a for loop to explore the treasure map\nfor location, description in treasure_map.items():\n    print(f'You are at {location}: {description}')\n    user_input = input('Do you want to continue the adventure? (yes/no): ')\n    \n    if user_input.lower() != 'yes':\n        print('Thanks for playing! Adventure complete.')\n        break","key":"kGEa5SGYiU"},{"type":"output","id":"IiORC89NGPWnxyMKSex-A","data":[{"name":"stdout","output_type":"stream","text":"You are at Start: You find yourself on a mysterious island.\nThanks for playing! Adventure complete.\n"}],"key":"jmjWXFKThZ"}],"data":{"type":"notebook-code"},"key":"UOSWuKtIVl"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 3: Double for-loops ... Tread carefully!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FymeDUH7gf"}],"identifier":"part-3-double-for-loops-tread-carefully","label":"Part 3: Double for-loops ... Tread carefully!","html_id":"part-3-double-for-loops-tread-carefully","implicit":true,"key":"HxLfiCNiTU"}],"data":{"type":"notebook-content"},"key":"Vl7ZJtB9zk"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Pretend you are sampling ages by asking 10 random people in the grocery store.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"klQZlMlB8t"}],"key":"He3iPfD6Rg"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"You do this expirement three times in the same grocery store on Monday, Tuesday and Wednesday.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cvY3CcKJap"}],"key":"dDior0Tq3b"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"You now have three lists of numbers that (rather conviently) are the same length.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"N7LQG4YOdS"}],"key":"Wl0In1TFwh"}],"data":{"type":"notebook-content"},"key":"XzhaDL8Sxw"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"list_Mon = [5, 12, 3, 5, 67, 1, 2, 34, 2, 89]\n\nlist_Tues = [15, 45, 21, 2, 8, 9, 54, 99, 17, 51]\n\nlist_Wed = [32, 65, 11, 9, 5, 75, 21, 14, 39, 71]","key":"VrIyuKjl4U"},{"type":"output","id":"7PCQfTSM4gCYJ6YtB8QGV","data":[],"key":"RU2AsbDiwl"}],"data":{"type":"notebook-code"},"key":"OVZFptazwi"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now lets say you wanted to know if any of these people could have been around to see the 2001 superbowl. How would you go about doing so?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lYS6i5v8kB"}],"key":"mvBAS1iusM"}],"data":{"type":"notebook-content"},"key":"KDWO6MO6aE"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"min_age = 2023 - 2001\nlist_Mon > min_age","key":"cXDfDS0Qlw"},{"type":"output","id":"vxbrxfl0yJ_AagYGVIod-","data":[{"ename":"TypeError","evalue":"'>' not supported between instances of 'list' and 'int'","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)\n\u001b[1;32m/Users/jsmonzon/Research/materials-development/Week3/lecture.ipynb Cell 27\u001b[0m line \u001b[0;36m2\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/jsmonzon/Research/materials-development/Week3/lecture.ipynb#X43sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m min_age \u001b[39m=\u001b[39m \u001b[39m2023\u001b[39m \u001b[39m-\u001b[39m \u001b[39m2001\u001b[39m\n\u001b[0;32m----> <a href='vscode-notebook-cell:/Users/jsmonzon/Research/materials-development/Week3/lecture.ipynb#X43sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m list_Mon \u001b[39m>\u001b[39;49m min_age\n\n\u001b[0;31mTypeError\u001b[0m: '>' not supported between instances of 'list' and 'int'"}],"key":"MatN92nK0z"}],"data":{"type":"notebook-code"},"key":"yyaavFVoLh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"well that doesn’t seem to work! so maybe we use a handy loop!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qwsb9RerLJ"}],"key":"YNptz0kcTS"}],"data":{"type":"notebook-content"},"key":"tqOdm2TxMB"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"bool_Mon = []\nfor i in list_Mon:\n    bool_Mon.append(i > min_age)\n\nprint(bool_Mon)\nprint(\"only \" +str(sum(bool_Mon)) + \" people are old enough!\")","key":"YUiX4VVENZ"},{"type":"output","id":"hESicur1sxgmBd-MOaF6B","data":[{"name":"stdout","output_type":"stream","text":"[False, False, False, False, True, False, False, True, False, True]\nonly 3 people are old enough!\n"}],"key":"q6Tqjt2irE"}],"data":{"type":"notebook-code"},"key":"xrCoNeGPRh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"okay but what about the other days? Maybe we iterate over a list of lists?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DQxNouLGQr"}],"key":"C0mYAPoYxf"}],"data":{"type":"notebook-content"},"key":"zgd3rQ9xPn"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"all_ages = [list_Mon, list_Tues, list_Wed]\nall_bool = []\n\nfor list in all_ages:\n    for i in list:\n        all_bool.append(i > min_age)\n\n\nprint(all_bool)\nprint(\"only \" +str(sum(all_bool)) + \" people are old enough!\")","key":"bckKdlvx20"},{"type":"output","id":"fhwmpfUwOVeyzGqQG6_ox","data":[{"name":"stdout","output_type":"stream","text":"[False, False, False, False, True, False, False, True, False, True, False, True, False, False, False, False, True, True, False, True, True, True, False, False, False, True, False, False, True, True]\nonly 12 people are old enough!\n"}],"key":"qUAkVPuZrr"}],"data":{"type":"notebook-code"},"key":"fhKQd788mE"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great so the double for-loop seems to work fine!, but lets say it wasn’t just 10 people each day, and it wasn’t just for three days.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"njnTeNTH8S"}],"key":"ijPWctYQIh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Instead, lets say you and your friends talked to 100,000 people each day for 10 years (10x365 days)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NAopHJMUXj"}],"key":"xoY9jglqUQ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Now since I can’t generate that many numbers on the spot I will use the numpy.random package. We will discuss this more later...","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"e30anwWO89"}],"key":"DLFVS91e8A"}],"data":{"type":"notebook-content"},"key":"LxUfqkKbpF"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"all_ages_BIG = np.random.randint(0,100, size=(3650,100000)).tolist()","key":"e7it2AQbfg"},{"type":"output","id":"kfCohus7pIErDvpFK1K_q","data":[],"key":"RBvB8s8DZa"}],"data":{"type":"notebook-code"},"key":"mdL4gHqMUa"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"lets try the same scheme as before with the double for-loop!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rLp6hZuIXJ"}],"key":"L50ViFctcI"}],"data":{"type":"notebook-content"},"key":"IeN4WXU6RN"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"all_bool_BIG = []\n\nfor list in all_ages_BIG:\n    for i in list:\n        all_bool_BIG.append(i > min_age)","key":"MNgYYGm6ZI"},{"type":"output","id":"DTlDXXo4FABAw4_Re3GFC","data":[],"key":"bRDi7Yhsf3"}],"data":{"type":"notebook-code"},"key":"GTGAjp9UzV"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"10^\" +str(np.log10(sum(all_bool_BIG))) + \" people are old enough!\")","key":"WH5byaZC8e"},{"type":"output","id":"HgNqfmPgWaUf28LaFs4DU","data":[{"name":"stdout","output_type":"stream","text":"10^8.448775123083287 people are old enough!\n"}],"key":"iwRH1OI6nP"}],"data":{"type":"notebook-code"},"key":"UskvRSAXrk"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"that is A LOT of people! so much so that it took our computer ~43 seconds to compute that number!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Drbzdic2m7"}],"key":"bXKuG1KIio"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"worst of all this is for a relatively simple operation! anything slightly more complicated would greatly impact the preformance of this scheme.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"AqBnvqeFYi"}],"key":"UDQMkbpxES"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We can do a lot better than that (namely by using numpy arrays)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"su0NFZs1EB"}],"key":"YgfllZkwzC"}],"data":{"type":"notebook-content"},"key":"n2kzoyedJd"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"all_ages_BIG = np.random.randint(0,100, size=(3650,100000))\n\nwow = np.sum(all_ages_BIG > min_age)\n\nprint(\"10^\" +str(np.log10(wow)) + \" people are old enough!\")","key":"jJ0jMOC0dI"},{"type":"output","id":"xv1fOMilecz0w-VyNj-up","data":[{"name":"stdout","output_type":"stream","text":"10^8.448763231936013 people are old enough!\n"}],"key":"RD4FNA4aOX"}],"data":{"type":"notebook-code"},"key":"LZwvIVG4YU"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"that only took 3 seconds! so be careful when constructing these seemingly harmless tools and remember double-for loops are a LAST RESORT!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KY6zCFaEgL"}],"key":"UuNBouv8Eh"}],"data":{"type":"notebook-content"},"key":"KL9zdWc8Hc"}],"key":"ASJIohqV48"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Logic Flow and Error Parsing","url":"/logic-lecture","group":"Week  3"},"next":{"title":"Unix Scavenger Hunt!","url":"/hunt","group":"Week  1"}}},"domain":"http://localhost:3006"}