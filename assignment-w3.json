{"kind":"Notebook","sha256":"f0ef8e1d11a47adbaa865f4b1f4f2bfcb7f04e7f2905677088df9089eb2e0a78","slug":"assignment-w3","location":"/02_Labs/Week 3/assignment_w3.ipynb","dependencies":[],"frontmatter":{"title":"Week 3 Assignment","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"assignment_w3.ipynb","url":"/build/assignment_w3-0666e26d4b7e87061d1eb3faa957ee20.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The main goal this week is to get familiar with importing (and using) three really useful packages: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XxheotKFex"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JMwfKuVldy"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KtVMs1Jfg9"},{"type":"inlineCode","value":"astropy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gN9erEhdi1"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fCTRZsEZyd"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lJYtt3FNDQ"},{"type":"text","value":". Throughout the assignment we will also write some for-loops and practice logic statements\nThis assignment is meant to be done in groups of 2-3 people.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ohvS2IY89f"}],"key":"mZcatTRKOV"}],"data":{"type":"notebook-content"},"key":"BCpCCNwYGo"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 1: Loading in the SubHalo Merger Tree Data (10 - 15 minutes)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sYL9w1BUqW"}],"identifier":"part-1-loading-in-the-subhalo-merger-tree-data-10-15-minutes","label":"Part 1: Loading in the SubHalo Merger Tree Data (10 - 15 minutes)","html_id":"part-1-loading-in-the-subhalo-merger-tree-data-10-15-minutes","implicit":true,"key":"hoN9CWYi7o"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"All galaxies live inside large accumulations of dark matter. These accumulations can be thought of as clouds or “halos”.\nA “merger tree” is a way of understanding the accretion history of a dark matter host halo. The trunk represents the present day host halo, and every branch is a merger event (a smaller halo being eaten up).\nThe higher up the tree you go, the further back in time you look! I work with a code named SatGen that can create these merger trees and today you will be handling the output of the SatGen code.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PGjWi5fDvF"}],"key":"IXasgaP52D"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"The code outputs several numpy arrays that are compressed together into a single ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vvgMhQFK6J"},{"type":"inlineCode","value":".npz","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GeeIAj8nSc"},{"type":"text","value":" file.\n(See this link ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qVIAVPbUGf"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.savez.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"https://​numpy​.org​/doc​/stable​/reference​/generated​/numpy​.savez​.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fp4DpyOtQv"}],"urlSource":"https://numpy.org/doc/stable/reference/generated/numpy.savez.html","key":"nLgnC85yTM"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fVZCxJ5frL"}],"key":"fNWbmySpOp"}],"data":{"type":"notebook-content"},"key":"GaVJkOGNud"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o1thRDG6xe"}],"key":"Nf0PHy2Unz"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Download the tree_0.npz file from slack (or however we share it with you). Create a new script in your IDE (VSCode, PyCharm, etc). You will want to be saving your code in this script throughout this assignment, but you may also want to have an ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BG8JjC1qwy"},{"type":"inlineCode","value":"ipython","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x9UBfPQRfE"},{"type":"text","value":" instance open, for the purposes of writing and testing code quickly before copying it into your script.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tXKgAc2Ux4"}],"key":"lkcRUy90jy"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Open the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KH1eZftcSt"},{"type":"inlineCode","value":".npz","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"K0ixwfGnGx"},{"type":"text","value":" file in your code.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FYEYyX4RZE"}],"key":"zxrQ1NvqSn"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How many arrays are contained in the compressed data file?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"o3hHBgE6EL"}],"key":"wSe55gazlW"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Select the mass array and print out its dimensionality.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bmkRBgW7dE"}],"key":"gHjcS3PJn6"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"What about the time array?","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"jvpYzrtYtX"}],"key":"dKU6ySKMZ9"}],"key":"lYTrvYs8wI"},{"type":"admonition","kind":"hint","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint: Opening the File + Looking Inside","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"sm37rGoUvB"}],"key":"CRbz4L67S3"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"An ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"KZOza6Zsqj"},{"type":"inlineCode","value":".npz","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Jqf6gKpOI1"},{"type":"text","value":" file is a file type defined by the ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"qPtO3HxCYS"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Od8zkPivLf"},{"type":"text","value":" package. Look into the ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"k7Pl4YyVLr"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"OkT602nPkD"},{"type":"text","value":" package to see how you can open that file type in python. Once you have the file open in python, you need some way to figure out what it contains. Recall that in dictionaries data is stored in ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"vb4V1AEZI5"},{"type":"inlineCode","value":"key","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Ve8B0zQ9no"},{"type":"text","value":": ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"KC2yO23hB4"},{"type":"inlineCode","value":"value","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"fl4RSgvHkO"},{"type":"text","value":" pairs, where keys represent that names. This type of numpy file is similar. In order to figure out what the names of our arrays are, we need to use the ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"geGqbY76SK"},{"type":"inlineCode","value":".keys()","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"fXWE1WFqrN"},{"type":"text","value":" method.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"q4mhgl0bsb"}],"key":"ycfijrrHDU"}],"key":"T5s7eTkb2h"},{"type":"admonition","kind":"hint","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint: Figuring out Dimensionality","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ERJLs0Inko"}],"key":"V9QY9dpY3q"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Look into using the ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"oqk21DO09c"},{"type":"inlineCode","value":"shape","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"QVhaDadI0G"},{"type":"text","value":" attribute to figure out the dimensionality of a ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"fN5OyQRMOm"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ZaUYkdpU8F"},{"type":"text","value":" array.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"XYNsqzQvor"}],"key":"L6Tj59r4LT"}],"key":"rBYnz5cXDC"}],"key":"Z2QqJgV7O2"}],"data":{"type":"notebook-content"},"key":"GSMfskcERC"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P8ebFtdl5T"}],"key":"JAdzkiUwNg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Discuss in your groups what physical units might make sense for these values. How can we add this information to the data which is currently only made up of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fVhISFNdnX"},{"type":"inlineCode","value":"float","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JhD3cOqYpC"},{"type":"text","value":" values?\nUsing ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RPA0M1nssw"},{"type":"inlineCode","value":"astropy.units","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iDtqgaPdcN"},{"type":"text","value":" create two new arrays (one for time and one for the mass) that have the proper units.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iqiS40RJHc"}],"key":"GNKd3QDBxL"},{"type":"admonition","kind":"hint","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"egXLIrwoVP"}],"key":"SR2AUBAfTr"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"In astronomy, we often use the mass of the Sun as our mass unit and we often use gigayears as our time unit. Try to set the units of your mass and time ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QLAI8YgdO9"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JbasYL2HjQ"},{"type":"text","value":" arrays to these using ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"j3XllgZXNh"},{"type":"inlineCode","value":"astropy.units","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CHweuQIDXc"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IrZvuPu1LB"}],"key":"Ru7hvf5w8j"}],"key":"k8O1gsRhSK"}],"key":"kDnARHabIN"}],"data":{"type":"notebook-content"},"key":"c0xypoblqi"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KDjy9t1uXm"}],"key":"ISS7sW35Wy"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"You might be familiar with the kilogram, meters, seconds (KMS) standard for units.\nConvert your mass array into kg using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cVYUAdiLDL"},{"type":"inlineCode","value":"astropy.units","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WBdydXVG4X"},{"type":"text","value":".\nConvert your time array into seconds.\nDo you see why it is useful for astronomers to work with other units?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tFJrLMamZk"}],"key":"XhjIdzucso"}],"key":"Os8vYmfMMy"}],"data":{"type":"notebook-content"},"key":"ubFGRIHkto"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 2: Playing around with halo mass (10 - 15 minutes)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kYyKHnTkPt"}],"identifier":"part-2-playing-around-with-halo-mass-10-15-minutes","label":"Part 2: Playing around with halo mass (10 - 15 minutes)","html_id":"part-2-playing-around-with-halo-mass-10-15-minutes","implicit":true,"key":"JiWv3mZAO9"}],"data":{"type":"notebook-content"},"key":"EW9866MPwF"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that you have opened up the data, I can tell you that the host halo is saved in the first index of the mass array.\nThe rest of the indices correspond to the subhalos that were accreted by the host during the “simulation”.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eQKz27QV5x"}],"key":"AwNkuK4c1j"}],"data":{"type":"notebook-content"},"key":"Ok0ehv408K"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 4","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KxMwoW4M3m"}],"key":"AkGwNbCvVK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Find the maximum mass of every subhalo across cosmic time! To start, you can try just finding the maximum mass for one subhalo (for ex. the first subhalo stored as the first element of the mass array).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qVk6RJ8z3E"}],"key":"vBJgC6HATZ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Try this using a for-loop, then disuss with your group if there is a more efficient way accomplish the same thing.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rVrKr9Ko9Z"}],"key":"sqY7ROGxbi"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"TIP","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xbJyeI8jtq"}],"key":"ksJSJ5651P"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Dark matter halos are REALLY massive! The SatGen code saves these mass values in units of solar masses and as you see, most halos are larger than 1 million solar masses.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GpXTFrHmEB"}],"key":"MisP03UPuw"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"It might make more sense to work with these numbers in log10 space. When you try to convert these values into log10 space, you might encounter a ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Z1BmZ71sKh"},{"type":"inlineCode","value":"UnitTypeError","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cMjPipt2CK"},{"type":"text","value":". See if you can figure out what this error is telling you by referencing the astropy units documentation.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"utqeS0labW"}],"key":"pHrSCKeBIK"},{"type":"admonition","kind":"hint","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint: Debugging ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"KkBGyyipcW"},{"type":"inlineCode","value":"UnitTypeError","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"pzqcBKb6UQ"}],"key":"fXs1DmRCdo"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"When using ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"faSySYeCNS"},{"type":"inlineCode","value":"astropy.units","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"aFGpyEhsjh"},{"type":"text","value":" we are actually converting our data from ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"PUN19ylw5q"},{"type":"inlineCode","value":"float","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"g3Ka6nmizM"},{"type":"text","value":" datatype to what’s called an ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ZlPc96t4CT"},{"type":"inlineCode","value":"astropy","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"vO4RTG1Mh9"},{"type":"text","value":" ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"LJt1Q2cZ86"},{"type":"inlineCode","value":"Quantity","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"bJ4S1UdmZr"},{"type":"text","value":" datatype. In order to do mathematical operaitons, we usually need to convert our data back to a regular type like ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EKaG8NcxMv"},{"type":"inlineCode","value":"float","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fGirG4NaVj"},{"type":"text","value":". The way we can do this is by using the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fOCo4YyoX5"},{"type":"inlineCode","value":".value","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"r3ZEJfUoZC"},{"type":"text","value":" attribute of an ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Y5ekoqL6t4"},{"type":"inlineCode","value":"astropy","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EoTUMn6J6V"},{"type":"text","value":" ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"DOJXzTIuWH"},{"type":"inlineCode","value":"Quantity","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"t5s5w2EinN"},{"type":"text","value":". So, we can convert our entire mass array back into regular old floats using ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ko72aC5azq"},{"type":"inlineCode","value":"mass.value","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"QEr1WhxPFu"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"qAEMBQTEZN"}],"key":"jpepaVkgW5"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"SideNote: if you do some unit conversions to your mass array while it is in ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"GXO8fj5vCh"},{"type":"inlineCode","value":"Quantity","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Pso5Y2e8nz"},{"type":"text","value":" datatype form, then convert it back to a regular numpy array, the actual values are still converted! You can see this for yourself by using astropy to convert to kg, then using ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"bwn7YqWDhZ"},{"type":"inlineCode","value":".value","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"dIsOYaN2A2"},{"type":"text","value":" to convert that back to floats. The values will still be changed! This is why the ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"HTznaVjBTs"},{"type":"inlineCode","value":"astropy.units","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"yHXVvDszkY"},{"type":"text","value":" module is so useful. You will never have to worry about unit conversions again.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"psqZsjzPQd"}],"key":"lLMYYfp6IF"}],"key":"ZHjb1SomAt"}],"key":"aJTy4bD0Gm"}],"key":"bnH6YIWaOu"}],"data":{"type":"notebook-content"},"key":"NNDQJz6UBJ"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 5","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ArOzKRBGlo"}],"key":"tEGYGdWskv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now, we are going to make our very first plot! We will be using a python package called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X0EY5k3I17"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rwBwFkNRbO"},{"type":"text","value":". The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HS6wpW42KV"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IZaNGoQaA2"},{"type":"text","value":" documentation has a nice page to walk you through the basics of how we can use this package to make plots. This will be a helpful reference: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZAucCL6rR8"},{"type":"link","url":"https://matplotlib.org/stable/tutorials/pyplot.html#sphx-glr-tutorials-pyplot-py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Matplotlib Tutorial","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aanJtxlYHh"}],"urlSource":"https://matplotlib.org/stable/tutorials/pyplot.html#sphx-glr-tutorials-pyplot-py","key":"YmMAY3EiJu"}],"key":"uirYLiEhU1"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Plot a histogram of the maximum masses you computed using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gm9hZFasq7"},{"type":"inlineCode","value":"matplotlib.pytplot.hist","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BZWumr67D8"},{"type":"text","value":" method (See ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FunC9vnHlq"},{"type":"link","url":"https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"this link","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uVdKPUEeqH"}],"urlSource":"https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html","key":"D8FIDKJ2gX"},{"type":"text","value":").\nMake sure to label the axes and change the binsize so that we have 15 evenly spaced (in log space) bins and put the y axis in log scale!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tpEacQxRUh"}],"key":"vnP9PxF6lY"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"TIP","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"oANYLtJ4os"}],"key":"gRuaAbwLzV"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"You could have also accomplished something similar with ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"T0AdYoNclj"},{"type":"inlineCode","value":"numpy.histogram","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kqUnLAHhUn"},{"type":"text","value":" but since we wanted to visualize the data, in this case its easier to use ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qN0Bms7Ak4"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"P8GiUaQ5I2"}],"key":"otfxdqBfac"}],"key":"ZDBWmNmajT"}],"key":"qMIQmpDE2d"}],"data":{"type":"notebook-content"},"key":"dtWnoWkLLm"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"WOW! There are so many more low mass subhalos than there are high mass subhalos!! LCDM predicts a steep mass function!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qFsDykmyqO"}],"key":"ng0sIRwrzX"}],"data":{"type":"notebook-content"},"key":"a5Y5WG0NKC"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 3: Plotting the merger tree! (20-25 minutes)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RyC2TTm1Xb"}],"identifier":"part-3-plotting-the-merger-tree-20-25-minutes","label":"Part 3: Plotting the merger tree! (20-25 minutes)","html_id":"part-3-plotting-the-merger-tree-20-25-minutes","implicit":true,"key":"hQJhdeNHUL"}],"data":{"type":"notebook-content"},"key":"KwRCSreu6y"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 6","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MUf9pioyVu"}],"key":"e6yD9FHz6p"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"First, let’s plot just the host halo’s mass vs. time. Start by selecting the host halo (e.g. the first element of in the mass array), and plot mass vs. time using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SxKcZYCqHv"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r1NYHCP3vv"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"O1CtNCoQ1v"}],"key":"tqb9ufAAb9"},{"type":"admonition","kind":"hint","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint: Plotting 2-D Data","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XQbLCrvnbB"}],"key":"qWZIuV0ML3"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"You can use ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"yoqPvdiAiA"},{"type":"inlineCode","value":"matplotlib.pyplot.plot","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cOTIvNNEyA"},{"type":"text","value":" to plot a line by giving the arguments (x-data, y-data).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jg4DTtJR4e"}],"key":"hAJlSfoZXB"}],"key":"RbNw4YTz0t"}],"key":"z5rmhGg6du"}],"data":{"type":"notebook-content"},"key":"gG8JvVBzQA"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Okay so as we know, there are a bunch of subhalos in this merger tree.\nIf we wanted plot all of them with respect to time, the figure would be a bit crowded. Instead lets only pick the ones that are above a given mass at present day.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CiUeGdiDgG"}],"key":"iZwI1XOiKo"}],"data":{"type":"notebook-content"},"key":"ejLxdOdHrZ"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 7","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QRzqkq4xLn"}],"key":"RGBV7MKPmv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In your mass array, select only the present day time index. Create a mask on this selection that excludes an subhalos that are less massive than 10^9.5 solar masses.\nHow many are there?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lzvLl3pzlD"}],"key":"Qnj9ZW4fh8"}],"key":"uFGNXpSBD6"}],"data":{"type":"notebook-content"},"key":"kgfinCqYTC"},{"type":"block","children":[{"type":"admonition","class":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 8","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N56bBwrCrw"}],"key":"NKvY1X2EX6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Make a mass vs. time plot for the subhalos that meet the present day mass criteria in the previous step.\nMake sure you plot the host mass in a different color.\nDon’t forget to label your axes!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HedTdmXMSj"}],"key":"rxoL2KHvfG"}],"key":"p2mBaov7z0"}],"data":{"type":"notebook-content"},"key":"hESTCnEYiY"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can you see the little dips in the accretion histories? That is when the subhalo is accreted onto the host! Notice there is no such dip for the red line!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yZlbsxXh5y"}],"key":"gbRSu5IVB9"}],"data":{"type":"notebook-content"},"key":"FudmVTWwx6"}],"key":"NiCrpzP6SC"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Calculating the Luminosities of Stars","url":"/week2-assignment","group":"Week  2"},"next":{"title":"Week 4 Exercises","url":"/week4","group":"Week  4"}}},"domain":"http://localhost:3000"}