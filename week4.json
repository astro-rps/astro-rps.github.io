{"kind":"Notebook","sha256":"b4615c5c7b29065bee275078714b262f0234c5f25f7207ee9f59952e003cdac8","slug":"week4","location":"/02_Labs/Week 4/Week4.ipynb","dependencies":[],"frontmatter":{"title":"Week 4 Exercises","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"Week4.ipynb","url":"/build/Week4-8e4d72100c79312adf90af98eb16b918.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this set of exercises, you’ll get more practice writing routines in Python and working with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mXZwNNFt22"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YaRYZNHwQB"},{"type":"text","value":" arrays, lists, and dictionaries.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"PVj0iZDdru"}],"key":"S6zUu7F4oc"}],"data":{"type":"notebook-content"},"key":"C2ydJhPTKq"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 1: Minimum Maximum","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XJVPOqHH1P"}],"key":"y969hZYWEM"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sAoocj2QyY"},{"type":"inlineCode","value":"minmax.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Pqet3g6GW9"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KGl6rpdMSj"}],"key":"IIzWQRG6hP"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this script, the first line (after importing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gGnoDZF1WC"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sOGBaj0Ucw"},{"type":"text","value":") should define a list, ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hGPg13qNrm"},{"type":"inlineCode","value":"input_list","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rNCOlbKgcA"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uBbpAPQihe"}],"key":"MtK1l93YKZ"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Below that, write code to perform the following logic:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nWQPZxXU9Z"}],"key":"tk60WcEPex"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Create a list containing the minimum and maximum of the list, e.g., ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GkTBftwDya"},{"type":"inlineCode","value":"[listmin,listmax]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"MpOtwlluSl"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"G6reMtFReP"}],"key":"IRxcz4moUK"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Add a variable below your ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"DZFh7jYP4v"},{"type":"inlineCode","value":"list_input","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"WpILTEe2ZG"},{"type":"text","value":" definition, but above the logic in (1). Call it ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"bvWxU331JM"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"av4QyhEWiF"},{"type":"text","value":", and assign it an initial value of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"p3k6WjGhAh"},{"type":"inlineCode","value":"False","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"L43TN1rR2k"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"kCoNsw7JSs"}],"key":"IhiCpy7F9c"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Now modify your code logic --- if ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mD07UeWPMb"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"WpCKGlqPkb"},{"type":"text","value":" is ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"k1XuDQ6LoS"},{"type":"inlineCode","value":"True","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ONMW2hyS5j"},{"type":"text","value":", have it return the min and max of only the subset of the input list that has positive values. If there are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"JYeeaawQMV"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"no","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jcRXalWLK8"}],"key":"yc6Q3BqBBP"},{"type":"text","value":" positive values, your output list should be","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jFd3H9SQvu"},{"type":"inlineCode","value":"[None,None]","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LbDjGq0qdd"},{"type":"text","value":". If only one value in the input is positive, it should return the same number twice.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"apXhi2mh7W"}],"key":"TFbsAH9IXo"}],"key":"jWRrTa0U4i"}],"key":"b2zz1E2zHV"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"You may find it useful to use some ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"SYzviob5mU"},{"type":"inlineCode","value":"if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"kUS2juWwbw"},{"type":"text","value":", some list indexing, and the np.min/np.max functions.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"tOC43Vi8Jg"}],"key":"h9sVw8WsxS"}],"data":{"type":"notebook-content"},"key":"PaJEDZNzXp"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 2: Finding Peaks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j9I3lgvpPT"}],"key":"iyU1ewxyOx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r732AIl4Wh"},{"type":"inlineCode","value":"peak_finder.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZAjreUjLjW"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yNBF85NYg8"}],"key":"uUDjZ4LhnT"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The goal of this script is to locate the peaks in an array. In this case, it will be a 1D array, but this issue generalizes: stars in an image are peaks, and we often need to find them!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sZdHaDPNnI"}],"key":"ASul5O6aa7"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, I provide a list, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IaSTP48Liz"},{"type":"inlineCode","value":"flux_values","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"oerlXrg4DG"},{"type":"text","value":", and then I plot it’s y values. Note that ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GUCgi6EWlU"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HlebArfWzI"},{"type":"text","value":" assumes x-values are an arange if not provided. Your goal is to write code which can find the peaks in this array, where a peak is defined as any location where the flux value is higher than both neighboring values (i.e., in ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JiEPvXm7fj"},{"type":"inlineCode","value":"[1,2,1]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zWN4DW1Nrk"},{"type":"text","value":", index 1 (the two) would be a peak).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tIPair7Afn"}],"key":"blBvGWZy12"}],"key":"CmmZALmpW2"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The answer you are looking for (see the plot) is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"oHEzuorVcP"},{"type":"inlineCode","value":"[4,13,16]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"rCK9EygjjH"},{"type":"text","value":". In an array this small, you could find this by eye or trial and error, but in a real array of thousands of elements, you may find it useful to have a peak finding code around!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"H92VsqdnHF"}],"key":"eNck060AA2"},{"type":"admonition","kind":"hint","class":"dropdown ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"aZcnS08289"}],"key":"Ul59SS0EkA"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"There is a looping based solution to this, and a non-looping based solution! If you ARE looping, you may need to be careful about how you handle the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"gUoGPAZli4"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"endpoints","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EcVs7ZFQqp"}],"key":"NBpfMdvST8"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Itkd9q7QFO"}],"key":"m4ibXCiyNs"}],"key":"sfhk573Jgg"}],"key":"UE5nqu6gt0"}],"data":{"type":"notebook-content"},"key":"WI1ZjabHvB"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np \nimport matplotlib.pyplot as plt \n\n\nflux_values = [0,0,1,2,3,2,1,1,1,0,2,2,3,5,4,3,6,2,1,0]\n\nfig,ax = plt.subplots()\nax.plot(flux_values)\nax.axvline(4,alpha=0.2)\nax.axvline(13,alpha=0.2)\nax.axvline(16,alpha=0.2)","visibility":"show","key":"k9iIGyjIrb"},{"type":"output","id":"sV6MnvQzsqHYJ30CycI7p","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c89444b1492f940c671a0a8cc1bd7448","path":"/build/c89444b1492f940c671a0a8cc1bd7448.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"iFI20jyeW1"}],"data":{"type":"notebook-code","tags":[]},"visibility":"show","key":"TsLodmwc7M"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 3: Load an Astronomical Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o4NY8GLi53"}],"key":"KoEfxeyRAi"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this exercise, we’ll view our first astronomical image! You can find it on Slack.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qzodPcamfr"}],"key":"WAVMDt6Xqr"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To open an astonomical image, we will use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SyEkwhWYIf"},{"type":"inlineCode","value":"astropy.io.fits","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"D9sDJrjPsT"},{"type":"text","value":" module. Import it:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kLbeXLT8LP"}],"key":"hC33QjBvL5"},{"type":"code","lang":"","value":"from astropy.io import fits","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"key":"RYTAVQtpnn"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"To obtain the header and image data from this file, we can do the following","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"msejK6LLsh"}],"key":"OxlmqwqCvb"},{"type":"code","lang":"","value":"with fits.open('/path/to/file') as hdu:\n    header = hdu[0].header \n    image = hdu[0].data","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"key":"d9QK6BuzQT"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We’ll talk more about what this means on Monday!","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"RmI14TBIp5"}],"key":"XrcvhOACOk"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Once you’ve done this, you should have an ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"UbdFeLLIvE"},{"type":"inlineCode","value":"image","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"CjhWnhvxoR"},{"type":"text","value":" variable that is a 2D array. Use the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"huEEyaOjMn"},{"type":"inlineCode","value":"imshow()","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"D7SohEUE3Q"},{"type":"text","value":" command from ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"O7tUCeyZA0"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TPR3Wx1UVu"},{"type":"text","value":" to view it.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"xPoUE1uLBQ"}],"key":"dV0f1xxZ8D"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Does it look like much?","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"GysW7GAU1x"}],"key":"JKbKGB3y8k"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"You will probably need to adjust key parameters ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"gKBbkFLpQU"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"gaKi7V87BT"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"IE0qqW4fky"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"mYaF0rXEIo"},{"type":"text","value":" to get a nicer looking image. I suggest using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"zoAYjBMwkK"},{"type":"inlineCode","value":"np.percentile()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"BPs2FLGzq4"},{"type":"text","value":" to compute the 1st and 99th percentile of the data, and then use those values when seeting the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"UK5Qb724bI"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"dbUCvcMhcj"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"YFcDZvWhaX"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Y7VCDbbHG8"},{"type":"text","value":" arguments in ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"BPwOzI7cyx"},{"type":"inlineCode","value":"imshow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"TJm4V0ON6U"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"cxZSkNpBhj"}],"key":"SIXXeL8DUc"}],"key":"ItijwlhHGm"}],"data":{"type":"notebook-content"},"key":"Fy1wxZZnNy"}],"key":"GLqROMFwbw"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Week 3 Assignment","url":"/assignment-w3","group":"Week  3"},"next":{"title":"Functions (and HII regions in M33)","url":"/assignment-functions","group":"Week  5"}}},"domain":"http://localhost:3011"}