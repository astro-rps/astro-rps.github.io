{"kind":"Notebook","sha256":"b4615c5c7b29065bee275078714b262f0234c5f25f7207ee9f59952e003cdac8","slug":"week4","location":"/02_Labs/Week 4/Week4.ipynb","dependencies":[],"frontmatter":{"title":"Week 4 Exercises","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"Week4.ipynb","url":"/build/Week4-8e4d72100c79312adf90af98eb16b918.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this set of exercises, you’ll get more practice writing routines in Python and working with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"EkM4oI2aDh"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nItCBjZqxH"},{"type":"text","value":" arrays, lists, and dictionaries.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tK8JD5yZAb"}],"key":"EOUpn5d12a"}],"data":{"type":"notebook-content"},"key":"XvxX4KqEAu"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 1: Minimum Maximum","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KA1xEFfOyF"}],"key":"gwWizRPRcL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"e3DeKLO192"},{"type":"inlineCode","value":"minmax.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iaXNnkPyi3"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uG5CEdmWwO"}],"key":"bv79PQAp1N"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this script, the first line (after importing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xRVHaDnIyk"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pPO5J8GvKw"},{"type":"text","value":") should define a list, ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ayhs73dIGl"},{"type":"inlineCode","value":"input_list","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GOr0MLRQZQ"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"trnpUTNmR0"}],"key":"Suk7BVNxim"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Below that, write code to perform the following logic:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"av0CoxnuUK"}],"key":"tLwrxoQPqT"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Create a list containing the minimum and maximum of the list, e.g., ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nFn3oop81V"},{"type":"inlineCode","value":"[listmin,listmax]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"sP5MXlOQgz"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"o80jnfGlk7"}],"key":"CXsLaHAYjP"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Add a variable below your ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GdDYl4EqHi"},{"type":"inlineCode","value":"list_input","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"OrpScu8hn3"},{"type":"text","value":" definition, but above the logic in (1). Call it ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"X15sLg2ekw"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"U8FBdgGb64"},{"type":"text","value":", and assign it an initial value of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"v2ciUGfaoT"},{"type":"inlineCode","value":"False","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"z1avzYQ1kZ"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"fe0Z2vgZbY"}],"key":"c9HRwqN3bd"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Now modify your code logic --- if ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eLgvGLVsQb"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eecAF3uBOv"},{"type":"text","value":" is ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"uv7t9z6PuP"},{"type":"inlineCode","value":"True","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ZWDwKmgBDy"},{"type":"text","value":", have it return the min and max of only the subset of the input list that has positive values. If there are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"avAaUby8ig"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"no","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"zTFbIaVlk4"}],"key":"yn0WGdrbTV"},{"type":"text","value":" positive values, your output list should be","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qmjEWMlzmz"},{"type":"inlineCode","value":"[None,None]","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mrrKlWJjva"},{"type":"text","value":". If only one value in the input is positive, it should return the same number twice.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"q0rVtwISAK"}],"key":"zbcxsGjWI3"}],"key":"ARbeygKRwa"}],"key":"EfYdAGGTMB"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"You may find it useful to use some ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"NCjUR8gDFL"},{"type":"inlineCode","value":"if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"WEWWjzI9pG"},{"type":"text","value":", some list indexing, and the np.min/np.max functions.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ScuVcORUKd"}],"key":"NfKMKCL1VV"}],"data":{"type":"notebook-content"},"key":"JTphDYKnMr"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 2: Finding Peaks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l0qisBusOI"}],"key":"wZPfstDe6T"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YXbQNURyRu"},{"type":"inlineCode","value":"peak_finder.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x2B1jlrPfk"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Sz4FETEHBf"}],"key":"cLY97H1yWV"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The goal of this script is to locate the peaks in an array. In this case, it will be a 1D array, but this issue generalizes: stars in an image are peaks, and we often need to find them!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nWe31gwqje"}],"key":"DmVdFiloC1"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, I provide a list, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"SBpY9efyLS"},{"type":"inlineCode","value":"flux_values","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uOodAmo4XC"},{"type":"text","value":", and then I plot it’s y values. Note that ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"G9RaSY9pyT"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IejrlCMOQx"},{"type":"text","value":" assumes x-values are an arange if not provided. Your goal is to write code which can find the peaks in this array, where a peak is defined as any location where the flux value is higher than both neighboring values (i.e., in ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hjw7CUEb8M"},{"type":"inlineCode","value":"[1,2,1]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"EyQppEQXpH"},{"type":"text","value":", index 1 (the two) would be a peak).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Zpd7Y5xvDZ"}],"key":"nCg2TNCuuh"}],"key":"iYPBy1tGx4"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The answer you are looking for (see the plot) is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"FSvoKZ9tW4"},{"type":"inlineCode","value":"[4,13,16]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"W6WXIOmSRe"},{"type":"text","value":". In an array this small, you could find this by eye or trial and error, but in a real array of thousands of elements, you may find it useful to have a peak finding code around!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Zs7GsT6F1G"}],"key":"GOcBhp5eHm"},{"type":"admonition","kind":"hint","class":"dropdown ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"cn9raY2ins"}],"key":"qHTbd6sm2V"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"There is a looping based solution to this, and a non-looping based solution! If you ARE looping, you may need to be careful about how you handle the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"c9onhN6lZr"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"endpoints","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"p5IjEKKw5U"}],"key":"ZouEpgd6Pa"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"bbxUCRF4FH"}],"key":"RIZzuwTqhs"}],"key":"y0NPnFyIRd"}],"key":"aYKfknGBkk"}],"data":{"type":"notebook-content"},"key":"GDIg8YnYos"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np \nimport matplotlib.pyplot as plt \n\n\nflux_values = [0,0,1,2,3,2,1,1,1,0,2,2,3,5,4,3,6,2,1,0]\n\nfig,ax = plt.subplots()\nax.plot(flux_values)\nax.axvline(4,alpha=0.2)\nax.axvline(13,alpha=0.2)\nax.axvline(16,alpha=0.2)","visibility":"show","key":"GUFpx3nXtG"},{"type":"output","id":"mP7A8zuosxhqgsFRRgHi0","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c89444b1492f940c671a0a8cc1bd7448","path":"/build/c89444b1492f940c671a0a8cc1bd7448.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"A2tGD5FTtM"}],"data":{"type":"notebook-code","tags":[]},"visibility":"show","key":"XMiT3UvZ00"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 3: Load an Astronomical Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EqtPaRiB7K"}],"key":"Qbhmv1CprR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this exercise, we’ll view our first astronomical image! You can find it on Slack.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SXGk8OUyko"}],"key":"MGyT1ZxAgN"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To open an astonomical image, we will use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mTKJ8pVuEe"},{"type":"inlineCode","value":"astropy.io.fits","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aCiGP1aUaq"},{"type":"text","value":" module. Import it:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DkEKq3vUxp"}],"key":"O5mL7P8VUv"},{"type":"code","lang":"","value":"from astropy.io import fits","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"key":"LOm5M4Webz"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"To obtain the header and image data from this file, we can do the following","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"pYz147ncI9"}],"key":"jnGKqBbrec"},{"type":"code","lang":"","value":"with fits.open('/path/to/file') as hdu:\n    header = hdu[0].header \n    image = hdu[0].data","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"key":"ACJ3mgigqZ"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We’ll talk more about what this means on Monday!","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ZNUP4kCCd4"}],"key":"Pu4WrWnemX"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Once you’ve done this, you should have an ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"JyMDZhSFwI"},{"type":"inlineCode","value":"image","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"oKSh4gtRuO"},{"type":"text","value":" variable that is a 2D array. Use the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"CQzxFe8SdC"},{"type":"inlineCode","value":"imshow()","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"PDUY93MPYf"},{"type":"text","value":" command from ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"zDuOhqqNqn"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"zqLicBMYuQ"},{"type":"text","value":" to view it.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"ol7uzrJzy1"}],"key":"V5jl8NR1G5"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Does it look like much?","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"zJc9X3vmgj"}],"key":"A1zG9qWLnu"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"You will probably need to adjust key parameters ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"jkpGwgbOCY"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"ongRo0GVSQ"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"uJP7LmdHQV"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"XP7OSnv0Cb"},{"type":"text","value":" to get a nicer looking image. I suggest using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"NoocjFpVe8"},{"type":"inlineCode","value":"np.percentile()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"YaYI8S5MjJ"},{"type":"text","value":" to compute the 1st and 99th percentile of the data, and then use those values when seeting the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"GI0781oqW8"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"l4v9JhfDDX"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"dxNfLhR9cY"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"xWYRjntxVj"},{"type":"text","value":" arguments in ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"B83L39Dbip"},{"type":"inlineCode","value":"imshow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"l3wVPJHxLP"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"bo0bbSJja0"}],"key":"o9V4Jxk7by"}],"key":"t470OMcr1Y"}],"data":{"type":"notebook-content"},"key":"IjOlBmk8ml"}],"key":"L5m0ckUrQK"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Week 3 Assignment","url":"/assignment-w3","group":"Week  3"},"next":{"title":"Functions (and HII regions in M33)","url":"/assignment-functions","group":"Week  5"}}},"domain":"http://localhost:3010"}