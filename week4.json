{"kind":"Notebook","sha256":"b4615c5c7b29065bee275078714b262f0234c5f25f7207ee9f59952e003cdac8","slug":"week4","location":"/02_Labs/Week 4/Week4.ipynb","dependencies":[],"frontmatter":{"title":"Week 4 Exercises","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"Week4.ipynb","url":"/build/Week4-8e4d72100c79312adf90af98eb16b918.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this set of exercises, you’ll get more practice writing routines in Python and working with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rdiOhjDcJl"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cxfALLkl13"},{"type":"text","value":" arrays, lists, and dictionaries.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OJPrqzmuvS"}],"key":"PRIWeJkpNC"}],"data":{"type":"notebook-content"},"key":"cav549eL3U"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 1: Minimum Maximum","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RA87A42EHO"}],"key":"BNVFhTUHr1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AKqI1ajLmQ"},{"type":"inlineCode","value":"minmax.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Oaarr9aLjx"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fc3YQLlt4H"}],"key":"DD0RnEJ5Nm"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this script, the first line (after importing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yP642buqtg"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"f77pQCkV2e"},{"type":"text","value":") should define a list, ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DgnRra58eH"},{"type":"inlineCode","value":"input_list","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZTU6EdOYpR"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ncXOOW7m5u"}],"key":"JrUBVa64SZ"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Below that, write code to perform the following logic:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CGKZqMIR2e"}],"key":"Ho5X92ZBVh"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Create a list containing the minimum and maximum of the list, e.g., ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"EihpdddjbA"},{"type":"inlineCode","value":"[listmin,listmax]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Cxte7hKMcJ"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"QEdRrq86MV"}],"key":"EuD2dRoNps"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Add a variable below your ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"b9xLf5pWAT"},{"type":"inlineCode","value":"list_input","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"YPy3wBulEm"},{"type":"text","value":" definition, but above the logic in (1). Call it ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lrrZK37pkZ"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"wNiGKbocsv"},{"type":"text","value":", and assign it an initial value of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"b71sqgkjQX"},{"type":"inlineCode","value":"False","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"LmHHQ0NtAj"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lHLr2dGd23"}],"key":"oZDu5Yt2Z3"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Now modify your code logic --- if ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"WZgvyq7jWx"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"csrL3WxfbL"},{"type":"text","value":" is ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"FycB4dqPPA"},{"type":"inlineCode","value":"True","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Qwb7qa3Ub0"},{"type":"text","value":", have it return the min and max of only the subset of the input list that has positive values. If there are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"o71uTWg6Nh"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"no","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VmTwe58WkL"}],"key":"tmRqh2xQPH"},{"type":"text","value":" positive values, your output list should be","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LKJyZpR83u"},{"type":"inlineCode","value":"[None,None]","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ctaFLeltLV"},{"type":"text","value":". If only one value in the input is positive, it should return the same number twice.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"IB1KchoMU6"}],"key":"yYiB0lI0qb"}],"key":"sNgbZqAtBf"}],"key":"ebDcMQ2WdA"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"You may find it useful to use some ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"PyGZOtPPXE"},{"type":"inlineCode","value":"if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"osLji3dqMk"},{"type":"text","value":", some list indexing, and the np.min/np.max functions.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ugPkVbFbwv"}],"key":"oCOvqtgagK"}],"data":{"type":"notebook-content"},"key":"pi2gm9vhXx"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 2: Finding Peaks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p2AK70eSCE"}],"key":"oWCHGYbLMN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eijd7TIYOZ"},{"type":"inlineCode","value":"peak_finder.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w3uVZK9AdL"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SCuaFXJ7hc"}],"key":"GdQUa5VS2t"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The goal of this script is to locate the peaks in an array. In this case, it will be a 1D array, but this issue generalizes: stars in an image are peaks, and we often need to find them!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Tnokt9hDA0"}],"key":"It0s5hoEFE"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, I provide a list, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vITlRyb2Tr"},{"type":"inlineCode","value":"flux_values","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wZrl6Arn1B"},{"type":"text","value":", and then I plot it’s y values. Note that ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rry2z0ByQg"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"REPI9PYce3"},{"type":"text","value":" assumes x-values are an arange if not provided. Your goal is to write code which can find the peaks in this array, where a peak is defined as any location where the flux value is higher than both neighboring values (i.e., in ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"eKTBIaRRks"},{"type":"inlineCode","value":"[1,2,1]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WK5BG4yUWk"},{"type":"text","value":", index 1 (the two) would be a peak).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NSDfxSXzQ2"}],"key":"r295QtWjm3"}],"key":"CxzUV3TlQ4"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The answer you are looking for (see the plot) is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"gqA7j9xfNL"},{"type":"inlineCode","value":"[4,13,16]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nZcdsW6eua"},{"type":"text","value":". In an array this small, you could find this by eye or trial and error, but in a real array of thousands of elements, you may find it useful to have a peak finding code around!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"QLLFAZcf7q"}],"key":"vgytBC9D8k"},{"type":"admonition","kind":"hint","class":"dropdown ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"wNIr3fUEMp"}],"key":"XrnBfppiSx"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"There is a looping based solution to this, and a non-looping based solution! If you ARE looping, you may need to be careful about how you handle the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EDLaUHAmBN"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"endpoints","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Q812HkNQFK"}],"key":"Vu37YwYTGm"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"HxRd9CthnS"}],"key":"UykY6hMzXq"}],"key":"ly6Mdrmn9l"}],"key":"oK4r4zdl1R"}],"data":{"type":"notebook-content"},"key":"Np7d4KYR2Q"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np \nimport matplotlib.pyplot as plt \n\n\nflux_values = [0,0,1,2,3,2,1,1,1,0,2,2,3,5,4,3,6,2,1,0]\n\nfig,ax = plt.subplots()\nax.plot(flux_values)\nax.axvline(4,alpha=0.2)\nax.axvline(13,alpha=0.2)\nax.axvline(16,alpha=0.2)","visibility":"show","key":"rlIyw6FyTJ"},{"type":"output","id":"g5bypoRERFg7oci9KYiP_","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c89444b1492f940c671a0a8cc1bd7448","path":"/build/c89444b1492f940c671a0a8cc1bd7448.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"Bf78SAqHpK"}],"data":{"type":"notebook-code","tags":[]},"visibility":"show","key":"vHuyWtWBTN"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 3: Load an Astronomical Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y8ixZZrdON"}],"key":"KjPKmUgbyL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this exercise, we’ll view our first astronomical image! You can find it on Slack.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yNLO4zfQaG"}],"key":"wULRe05s4A"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To open an astonomical image, we will use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gYiBuT6YBP"},{"type":"inlineCode","value":"astropy.io.fits","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tFy1OJ54tN"},{"type":"text","value":" module. Import it:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qlHR940EQY"}],"key":"GAMPm4lEkF"},{"type":"code","lang":"","value":"from astropy.io import fits","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"key":"zdR4tKzHVd"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"To obtain the header and image data from this file, we can do the following","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"y2ZKy6L0o6"}],"key":"W44v3flVzA"},{"type":"code","lang":"","value":"with fits.open('/path/to/file') as hdu:\n    header = hdu[0].header \n    image = hdu[0].data","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"key":"RHTNkbzeFu"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We’ll talk more about what this means on Monday!","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"g4WbCgHv97"}],"key":"PX4NZm0JAx"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Once you’ve done this, you should have an ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"lCdovpslKX"},{"type":"inlineCode","value":"image","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"xmLJR7OJiY"},{"type":"text","value":" variable that is a 2D array. Use the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"zSy8GeKgdl"},{"type":"inlineCode","value":"imshow()","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"RfAsvatsrS"},{"type":"text","value":" command from ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TsdNlQXv3n"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"dCQRiYkGrD"},{"type":"text","value":" to view it.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"B9NiqlsPFy"}],"key":"oY0IE4LVk9"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Does it look like much?","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"fVG8QdzI0X"}],"key":"TzQgapAri5"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"You will probably need to adjust key parameters ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"FhdVj140IE"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"EY0kZBtBSD"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"rqoWJkqApv"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"pCSIt7ei5S"},{"type":"text","value":" to get a nicer looking image. I suggest using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"eTcJROuhHJ"},{"type":"inlineCode","value":"np.percentile()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Bp4gT4BQGh"},{"type":"text","value":" to compute the 1st and 99th percentile of the data, and then use those values when seeting the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"QkZwGh8ARa"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"tpn1j4UxLQ"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"fUmzpWo9N5"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"bPNus9mFUq"},{"type":"text","value":" arguments in ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"iuKLAFnxU3"},{"type":"inlineCode","value":"imshow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"iMiIuz2whX"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"IJiD0cNqOQ"}],"key":"ytWI9bPMCC"}],"key":"vvk43XFzB1"}],"data":{"type":"notebook-content"},"key":"gaO7plB3kr"}],"key":"xpOQYE58ba"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Week 3 Assignment","url":"/assignment-w3","group":"Week  3"},"next":{"title":"Functions (and HII regions in M33)","url":"/assignment-functions","group":"Week  5"}}},"domain":"http://localhost:3012"}