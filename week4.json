{"kind":"Notebook","sha256":"b4615c5c7b29065bee275078714b262f0234c5f25f7207ee9f59952e003cdac8","slug":"week4","location":"/02_Labs/Week 4/Week4.ipynb","dependencies":[],"frontmatter":{"title":"Week 4 Exercises","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"Week4.ipynb","url":"/build/Week4-8e4d72100c79312adf90af98eb16b918.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this set of exercises, you’ll get more practice writing routines in Python and working with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OYxh4T7iKc"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"S5Pew4RlCV"},{"type":"text","value":" arrays, lists, and dictionaries.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"u5C68XYm7A"}],"key":"gFGp6wEFMD"}],"data":{"type":"notebook-content"},"key":"VqGI6CLHb1"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 1: Minimum Maximum","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CFDOzC7UKh"}],"key":"mijNLBqJFx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IxWYrEE9ox"},{"type":"inlineCode","value":"minmax.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Q63e551oX8"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gvjawkmt9G"}],"key":"I9QW5mX96h"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this script, the first line (after importing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hw00uEbPgG"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NfOwyck5W9"},{"type":"text","value":") should define a list, ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cDqLqvh6if"},{"type":"inlineCode","value":"input_list","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ryCc8qAKSB"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dN9Ir199EZ"}],"key":"ER37hYvygq"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Below that, write code to perform the following logic:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OOyuRAwQxW"}],"key":"PrtX1c4bgo"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Create a list containing the minimum and maximum of the list, e.g., ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SmwGiJDGPL"},{"type":"inlineCode","value":"[listmin,listmax]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Uzp7jN43U2"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"aef3stc6DD"}],"key":"sOU1qWkHP4"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Add a variable below your ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"TQQuDC72Vz"},{"type":"inlineCode","value":"list_input","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RTeCK4Gu01"},{"type":"text","value":" definition, but above the logic in (1). Call it ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"hUKcdOg18T"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"izKqCwp2F7"},{"type":"text","value":", and assign it an initial value of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ugSVxlznnh"},{"type":"inlineCode","value":"False","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"euh1d0MWlL"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GsHcjFpFBm"}],"key":"Gh9zYglQV6"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Now modify your code logic --- if ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"dSCreIUoBs"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"UrOmNq9kqC"},{"type":"text","value":" is ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"rp5ue5tzBw"},{"type":"inlineCode","value":"True","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"NfBOuhRrNz"},{"type":"text","value":", have it return the min and max of only the subset of the input list that has positive values. If there are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"O1bBUOxZqC"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"no","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"siQnTagSGp"}],"key":"vbxMhqvYIP"},{"type":"text","value":" positive values, your output list should be","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"KG8bSjiHN4"},{"type":"inlineCode","value":"[None,None]","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"HQiu4qdXwr"},{"type":"text","value":". If only one value in the input is positive, it should return the same number twice.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"bWFpDAQu2s"}],"key":"x4xxHsdDpf"}],"key":"t54ZQH2zue"}],"key":"JfQKp6ZtFe"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"You may find it useful to use some ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"luzH1dg8SJ"},{"type":"inlineCode","value":"if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"K8K7cDeelc"},{"type":"text","value":", some list indexing, and the np.min/np.max functions.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"jhSYefukVf"}],"key":"jOzIsBdT0w"}],"data":{"type":"notebook-content"},"key":"ao4Jr2Fops"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 2: Finding Peaks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yhIzVyb0Hc"}],"key":"Kue9Vuxuzg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SMFK3iYGUs"},{"type":"inlineCode","value":"peak_finder.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hKXg33TeYG"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dDd0wnpDhM"}],"key":"webEJRyz3d"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The goal of this script is to locate the peaks in an array. In this case, it will be a 1D array, but this issue generalizes: stars in an image are peaks, and we often need to find them!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VI6UWY467h"}],"key":"QLlEMZpk2q"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, I provide a list, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"SJSaDK3Obz"},{"type":"inlineCode","value":"flux_values","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Xrma56eSWL"},{"type":"text","value":", and then I plot it’s y values. Note that ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bY8aE2hbVr"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iq2YOoZayq"},{"type":"text","value":" assumes x-values are an arange if not provided. Your goal is to write code which can find the peaks in this array, where a peak is defined as any location where the flux value is higher than both neighboring values (i.e., in ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bVIzX9HDCW"},{"type":"inlineCode","value":"[1,2,1]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rZw9vvyuEf"},{"type":"text","value":", index 1 (the two) would be a peak).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uNOcxpYVNn"}],"key":"t3vZPj5QdO"}],"key":"dNHAiqCmYx"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The answer you are looking for (see the plot) is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"RKMwPwrNXc"},{"type":"inlineCode","value":"[4,13,16]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Qkkb31moiO"},{"type":"text","value":". In an array this small, you could find this by eye or trial and error, but in a real array of thousands of elements, you may find it useful to have a peak finding code around!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"o6ilwp7jKd"}],"key":"B3OlCSOMwf"},{"type":"admonition","kind":"hint","class":"dropdown ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"z3j12x9yrz"}],"key":"NbwzJhwe8I"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"There is a looping based solution to this, and a non-looping based solution! If you ARE looping, you may need to be careful about how you handle the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ANz2sG7mbq"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"endpoints","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fpev4IeJP7"}],"key":"KutAkGdLiO"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"sZTufITE82"}],"key":"l1P1wIE0D6"}],"key":"BuvqKlyQkX"}],"key":"Sc59gim1Yf"}],"data":{"type":"notebook-content"},"key":"CYQRrGzIED"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np \nimport matplotlib.pyplot as plt \n\n\nflux_values = [0,0,1,2,3,2,1,1,1,0,2,2,3,5,4,3,6,2,1,0]\n\nfig,ax = plt.subplots()\nax.plot(flux_values)\nax.axvline(4,alpha=0.2)\nax.axvline(13,alpha=0.2)\nax.axvline(16,alpha=0.2)","visibility":"show","key":"NYomv78Uy8"},{"type":"output","id":"tT3rWWxn0Jgts140RKXLR","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c89444b1492f940c671a0a8cc1bd7448","path":"/build/c89444b1492f940c671a0a8cc1bd7448.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"px2h2EjnLh"}],"data":{"type":"notebook-code","tags":[]},"visibility":"show","key":"wzR1h75dxB"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 3: Load an Astronomical Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tCwoOXSPeP"}],"key":"vxKGCazg0q"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this exercise, we’ll view our first astronomical image! You can find it on Slack.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zDIZQsGTyQ"}],"key":"S7O7K29T0j"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To open an astonomical image, we will use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"C5B3eXBqd0"},{"type":"inlineCode","value":"astropy.io.fits","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gI2HO22dg2"},{"type":"text","value":" module. Import it:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"A1tEztznrK"}],"key":"cRLUIlfNNd"},{"type":"code","lang":"","value":"from astropy.io import fits","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"key":"KcACbM1mju"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"To obtain the header and image data from this file, we can do the following","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"D24tsPn9SA"}],"key":"BcKbrnzzes"},{"type":"code","lang":"","value":"with fits.open('/path/to/file') as hdu:\n    header = hdu[0].header \n    image = hdu[0].data","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"key":"TVJb5bvkxh"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We’ll talk more about what this means on Monday!","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"wBSbte99hb"}],"key":"vRMyC9baIQ"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Once you’ve done this, you should have an ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"fhTQlZ9VaF"},{"type":"inlineCode","value":"image","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"it9djEzmT9"},{"type":"text","value":" variable that is a 2D array. Use the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"DqLobSVW0R"},{"type":"inlineCode","value":"imshow()","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"r5FreNCGkG"},{"type":"text","value":" command from ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"HD5XRJNyeR"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"UAZtc6Sleb"},{"type":"text","value":" to view it.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"VtU1Mv8hye"}],"key":"KUUGAVxute"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Does it look like much?","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"h734RFU4BM"}],"key":"AW28FbFAWL"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"You will probably need to adjust key parameters ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"mRIttEM6yF"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"xBj6pXywRL"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Bc2RjHqfQ3"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"MgzrDRmDiZ"},{"type":"text","value":" to get a nicer looking image. I suggest using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"HnKnVY2Tai"},{"type":"inlineCode","value":"np.percentile()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"w66QAbQfJI"},{"type":"text","value":" to compute the 1st and 99th percentile of the data, and then use those values when seeting the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"oPEu2cNuan"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"RH2CuCdGQg"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"HGTw0F5dCY"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"IbcwWdfLj4"},{"type":"text","value":" arguments in ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"eQru9mQ3KT"},{"type":"inlineCode","value":"imshow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"NBgUB6phA5"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"cd9YM7CCEV"}],"key":"aeOQYASV2Y"}],"key":"qsZy81hLgn"}],"data":{"type":"notebook-content"},"key":"DMbM9tsChK"}],"key":"FawCh40VqH"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Week 3 Assignment","url":"/assignment-w3","group":"Week  3"},"next":{"title":"Functions (and HII regions in M33)","url":"/assignment-functions","group":"Week  5"}}},"domain":"http://localhost:3000"}