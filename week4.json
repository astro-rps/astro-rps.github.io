{"kind":"Notebook","sha256":"b4615c5c7b29065bee275078714b262f0234c5f25f7207ee9f59952e003cdac8","slug":"week4","location":"/02_Labs/Week 4/Week4.ipynb","dependencies":[],"frontmatter":{"title":"Week 4 Exercises","github":"https://astro-rps.github.io/","keywords":[],"exports":[{"format":"ipynb","filename":"Week4.ipynb","url":"/build/Week4-8e4d72100c79312adf90af98eb16b918.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this set of exercises, you’ll get more practice writing routines in Python and working with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wAInkguPqk"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Tzu7f8P8IN"},{"type":"text","value":" arrays, lists, and dictionaries.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"blNpp89yej"}],"key":"XS5ic6jY5z"}],"data":{"type":"notebook-content"},"key":"KW3oyczsQH"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 1: Minimum Maximum","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RV20xqV12e"}],"key":"XYTjs3fcO1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zFe77eAAQ4"},{"type":"inlineCode","value":"minmax.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GtXCXWFstS"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eXd5RHYRR4"}],"key":"HwmFkzfSg7"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this script, the first line (after importing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PiIZubqW9y"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Broxq8HpKL"},{"type":"text","value":") should define a list, ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VTKZaKl03b"},{"type":"inlineCode","value":"input_list","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vLnLznjVct"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"J4sh7nHUON"}],"key":"lsppwBesuC"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Below that, write code to perform the following logic:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nTjGchAFbq"}],"key":"j3Uc08KzZB"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Create a list containing the minimum and maximum of the list, e.g., ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JkPA0l3XsI"},{"type":"inlineCode","value":"[listmin,listmax]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"xGT5BGYD7K"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"t7Syhga32A"}],"key":"r2JXMPMi6w"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Add a variable below your ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"a2qwC1Otnm"},{"type":"inlineCode","value":"list_input","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"VcHU8SQqwQ"},{"type":"text","value":" definition, but above the logic in (1). Call it ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"SxAKPzM6mG"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Pcwiu5vrWe"},{"type":"text","value":", and assign it an initial value of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"aJ4oVDGuDY"},{"type":"inlineCode","value":"False","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"VVZ2JAQ2Ra"},{"type":"text","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"r8CTvdV2te"}],"key":"cC6LcwLsbE"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Now modify your code logic --- if ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jKloMhKRA7"},{"type":"inlineCode","value":"positive_only","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"MrwRKFfppf"},{"type":"text","value":" is ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"V3JhfKKOSd"},{"type":"inlineCode","value":"True","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"CP0I4XwvW6"},{"type":"text","value":", have it return the min and max of only the subset of the input list that has positive values. If there are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"HKJJc3AJy9"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"no","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VeAPlhCprd"}],"key":"WA4fCzXEz7"},{"type":"text","value":" positive values, your output list should be","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"IZFtawk5tl"},{"type":"inlineCode","value":"[None,None]","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"a9xRrrWuTU"},{"type":"text","value":". If only one value in the input is positive, it should return the same number twice.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"nHS6Navi5E"}],"key":"STRrZypoAK"}],"key":"FXO6DipmNg"}],"key":"SflbRHfZJl"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"You may find it useful to use some ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"WWbcQgENLW"},{"type":"inlineCode","value":"if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ReX011zyqB"},{"type":"text","value":", some list indexing, and the np.min/np.max functions.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"DfdIFZbDS9"}],"key":"sW7yfXXvC6"}],"data":{"type":"notebook-content"},"key":"oXtNAmZheS"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 2: Finding Peaks","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uLNnJu78g6"}],"key":"E2uGmB2Jtt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create a script ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kF11nYNCHw"},{"type":"inlineCode","value":"peak_finder.py","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lHp82DoWbe"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dAHpG2ZDnl"}],"key":"i62j4D4ZjJ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The goal of this script is to locate the peaks in an array. In this case, it will be a 1D array, but this issue generalizes: stars in an image are peaks, and we often need to find them!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kCymT4rv9L"}],"key":"DR68yGyEJ8"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, I provide a list, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"aYBopfbOkR"},{"type":"inlineCode","value":"flux_values","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dWxIK4SVlH"},{"type":"text","value":", and then I plot it’s y values. Note that ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JjAUcit3EV"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Ik2DVQBsCF"},{"type":"text","value":" assumes x-values are an arange if not provided. Your goal is to write code which can find the peaks in this array, where a peak is defined as any location where the flux value is higher than both neighboring values (i.e., in ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UA60m7l31S"},{"type":"inlineCode","value":"[1,2,1]","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bsE5PATeBu"},{"type":"text","value":", index 1 (the two) would be a peak).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bX70CTwKeX"}],"key":"cK6gN2L1hV"}],"key":"igMNBSLVAt"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The answer you are looking for (see the plot) is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"k1swmxATXS"},{"type":"inlineCode","value":"[4,13,16]","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nflEwm11oR"},{"type":"text","value":". In an array this small, you could find this by eye or trial and error, but in a real array of thousands of elements, you may find it useful to have a peak finding code around!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Djl3oUqmrA"}],"key":"fqFiZR0CAh"},{"type":"admonition","kind":"hint","class":"dropdown ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"Ucw441nXM4"}],"key":"JeRtJ1Y4if"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"There is a looping based solution to this, and a non-looping based solution! If you ARE looping, you may need to be careful about how you handle the ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"WY6mfmsg4a"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"endpoints","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"peAf4dJRzB"}],"key":"owKCPXv35W"},{"type":"text","value":".","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"jz54GPGTeR"}],"key":"xtIeP57uBV"}],"key":"mVdSrfo5RD"}],"key":"ckzAUTLgTh"}],"data":{"type":"notebook-content"},"key":"v3VoQNzAj0"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np \nimport matplotlib.pyplot as plt \n\n\nflux_values = [0,0,1,2,3,2,1,1,1,0,2,2,3,5,4,3,6,2,1,0]\n\nfig,ax = plt.subplots()\nax.plot(flux_values)\nax.axvline(4,alpha=0.2)\nax.axvline(13,alpha=0.2)\nax.axvline(16,alpha=0.2)","visibility":"show","key":"SxLqqYOEm9"},{"type":"output","id":"t-7fywMkF3LsXEzAHFrZJ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c89444b1492f940c671a0a8cc1bd7448","path":"/build/c89444b1492f940c671a0a8cc1bd7448.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"dg5ZqbI8uP"}],"data":{"type":"notebook-code","tags":[]},"visibility":"show","key":"hc5TyG5szk"},{"type":"block","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Exercise 3: Load an Astronomical Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"queO15TZF8"}],"key":"pTPmtNOILg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this exercise, we’ll view our first astronomical image! You can find it on Slack.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"b1vxPG4y3z"}],"key":"Nsd3yfVBAG"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To open an astonomical image, we will use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aQFbtjnNVh"},{"type":"inlineCode","value":"astropy.io.fits","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jNl2MEDWPX"},{"type":"text","value":" module. Import it:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"a54zDnPuZf"}],"key":"N4HsGXv8gQ"},{"type":"code","lang":"","value":"from astropy.io import fits","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"key":"S9IBQ6Iqi4"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"To obtain the header and image data from this file, we can do the following","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"p6XoeKk2v8"}],"key":"p17rtP2C5X"},{"type":"code","lang":"","value":"with fits.open('/path/to/file') as hdu:\n    header = hdu[0].header \n    image = hdu[0].data","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"key":"vYVXy0oTnJ"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We’ll talk more about what this means on Monday!","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"OwlbjBlvwl"}],"key":"TyDHNQS61k"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Once you’ve done this, you should have an ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"M4EVEWS0Qv"},{"type":"inlineCode","value":"image","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"PfxYp6JPEV"},{"type":"text","value":" variable that is a 2D array. Use the ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"bKU4TLKQt8"},{"type":"inlineCode","value":"imshow()","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"z3SdvWpbb0"},{"type":"text","value":" command from ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"caEAhRsGjy"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Q8a40qA5nC"},{"type":"text","value":" to view it.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"FCVprp7onr"}],"key":"VFwLasa8fb"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Does it look like much?","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"ZYUuCM4Pcz"}],"key":"qbsADt4gr8"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"You will probably need to adjust key parameters ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"D2PymcRQGS"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"cy4bMIzjof"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"a9nIUvHINz"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"aXvnA6yO1S"},{"type":"text","value":" to get a nicer looking image. I suggest using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"so7ZtI49QE"},{"type":"inlineCode","value":"np.percentile()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"W4sMFrraYp"},{"type":"text","value":" to compute the 1st and 99th percentile of the data, and then use those values when seeting the ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"QoQWWRbtsf"},{"type":"inlineCode","value":"vmin","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"sqdoROLWYE"},{"type":"text","value":" and ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"fOwIEREHtx"},{"type":"inlineCode","value":"vmax","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"XgpSTjiAVt"},{"type":"text","value":" arguments in ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"tm79pipAly"},{"type":"inlineCode","value":"imshow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"npSC3PlaEn"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"D1904UrPQ6"}],"key":"AVnwilJz04"}],"key":"VtpIgb7nZu"}],"data":{"type":"notebook-content"},"key":"eVwKGMZqNI"}],"key":"hcBu1y9fRF"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Week 3 Assignment","url":"/assignment-w3","group":"Week  3"},"next":{"title":"Functions (and HII regions in M33)","url":"/assignment-functions","group":"Week  5"}}},"domain":"http://localhost:3002"}